baseline-baseline-py-name,

"Numpy Benchmark  - ",
Higher Results Are Better

"baseline-baseline-py-id",426.21,428.4,424.24

"PyTorch 2.1 - Device: CPU - Batch Size: 1 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",32.389870351558,32.527209525599,32.154218979601

"PyTorch 2.1 - Device: CPU - Batch Size: 1 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",12.753468037192,12.748029669087,12.671102866429

"PyTorch 2.1 - Device: CPU - Batch Size: 16 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",24.212891191054,24.247279105756,24.382323042728

"PyTorch 2.1 - Device: CPU - Batch Size: 32 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",24.206130227288,24.489029042681,24.162527528591

"PyTorch 2.1 - Device: CPU - Batch Size: 64 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",24.175166701001,24.23209100407,24.322649579792

"PyTorch 2.1 - Device: CPU - Batch Size: 16 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",9.8904859515294,9.9428448948896,9.8131233201967

"PyTorch 2.1 - Device: CPU - Batch Size: 256 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",24.48171065521,24.40428490292,24.382245554241

"PyTorch 2.1 - Device: CPU - Batch Size: 32 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",9.7529501957159,9.84171084831,9.9161011173278

"PyTorch 2.1 - Device: CPU - Batch Size: 512 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",24.157351951439,24.105064978177,24.11461826077

"PyTorch 2.1 - Device: CPU - Batch Size: 64 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",9.8112276199313,9.912225376178,9.9108958596132

"PyTorch 2.1 - Device: CPU - Batch Size: 256 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",9.8978022330688,9.6593130858406,9.7611178002503

"PyTorch 2.1 - Device: CPU - Batch Size: 512 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",9.8943627360891,9.8255421757378,9.8819890592792

"PyTorch 2.1 - Device: CPU - Batch Size: 1 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",7.3097321967331,7.3055743030213,7.3033737414384

"PyTorch 2.1 - Device: CPU - Batch Size: 16 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",5.5979832954881,5.6200406795962,5.6685277472507

"PyTorch 2.1 - Device: CPU - Batch Size: 32 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",5.6534929294271,5.610234472842,5.629025706195

"PyTorch 2.1 - Device: CPU - Batch Size: 64 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",5.6358935876638,5.6064917368309,5.6277400910703

"PyTorch 2.1 - Device: CPU - Batch Size: 256 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",5.6212275659036,5.5738877946886,5.6229505919528

"PyTorch 2.1 - Device: CPU - Batch Size: 512 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",5.5937471937482,5.6127021946747,5.6356709789806

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 1 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",208.26273568201,208.16092001358,216.22784984483

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 1 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",74.104246873693,72.855455127669,74.767816125463

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 16 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",200.28653349912,200.74011036127,199.88341472284

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 32 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",198.05249000623,201.54057159962,198.78325150883

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 64 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",202.38947790876,201.48007369278,200.37087802933

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 16 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",72.044506139787,72.052245871357,74.93976355445

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 256 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",206.11910191051,201.85311388449,200.19587439476

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 32 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",75.008731852324,75.210621772599,72.242863426777

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 512 - Model: ResNet-50",
Higher Results Are Better

"baseline-baseline-py-id",200.86937737125,202.19116863846,206.47195164333

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 64 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",70.981321453667,72.489381781433,71.964200520654

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 256 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",71.301959782205,72.145318066104,71.764960459163

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 512 - Model: ResNet-152",
Higher Results Are Better

"baseline-baseline-py-id",74.176500416083,71.37250055715,71.369157790613

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 1 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",39.209154397922,40.235156364979,38.615419900175

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 16 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",38.802148892971,39.060295702463,38.979102333057

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 32 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",37.268221940641,37.798836939071,38.071658025045

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 64 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",39.188923393128,37.741263038979,36.423494652639,37.46656533349,37.192734732362,38.667630790414,39.038934904472,37.652696970775,37.56074548686

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 256 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",37.484874519756,37.533983483161,37.073864009659

"PyTorch 2.1 - Device: NVIDIA CUDA GPU - Batch Size: 512 - Model: Efficientnet_v2_l",
Higher Results Are Better

"baseline-baseline-py-id",37.3909400527,37.477174783993,37.414845087819

"PyBench 2018-02-16 - Total For Average Test Times",
Lower Results Are Better

"baseline-baseline-py-id",775,772,775

"PyPerformance 1.0.0 - Benchmark: go",
Lower Results Are Better

"baseline-baseline-py-id",129,129,129

"PyPerformance 1.0.0 - Benchmark: 2to3",
Lower Results Are Better

"baseline-baseline-py-id",221,221,221

"PyPerformance 1.0.0 - Benchmark: chaos",
Lower Results Are Better

"baseline-baseline-py-id",62.9,62.8,62.8

"PyPerformance 1.0.0 - Benchmark: float",
Lower Results Are Better

"baseline-baseline-py-id",67.5,67.4,67.4

"PyPerformance 1.0.0 - Benchmark: nbody",
Lower Results Are Better

"baseline-baseline-py-id",76.3,76.2,76.1

"PyPerformance 1.0.0 - Benchmark: pathlib",
Lower Results Are Better

"baseline-baseline-py-id",19.7,19.7,19.7

"PyPerformance 1.0.0 - Benchmark: raytrace",
Lower Results Are Better

"baseline-baseline-py-id",261,262,262

"PyPerformance 1.0.0 - Benchmark: json_loads",
Lower Results Are Better

"baseline-baseline-py-id",19.4,19.6,19.5

"PyPerformance 1.0.0 - Benchmark: crypto_pyaes",
Lower Results Are Better

"baseline-baseline-py-id",65.1,65,65.2

"PyPerformance 1.0.0 - Benchmark: regex_compile",
Lower Results Are Better

"baseline-baseline-py-id",116,116,116

"PyPerformance 1.0.0 - Benchmark: python_startup",
Lower Results Are Better

"baseline-baseline-py-id",7.6,7.61,7.62

"PyPerformance 1.0.0 - Benchmark: django_template",
Lower Results Are Better

"baseline-baseline-py-id",28.5,28.5,28.4

"PyPerformance 1.0.0 - Benchmark: pickle_pure_python",
Lower Results Are Better

"baseline-baseline-py-id",259,259,258

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: JAX - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",0.003,0.003,0.003

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",0.009,0.009,0.009

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",0.015,0.015,0.015

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",0.032,0.032,0.033

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: JAX - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",0.003,0.003,0.003

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",0.009,0.009,0.009

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",0.015,0.015,0.015

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",0.033,0.033,0.033

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",0.062,0.061,0.06

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",0.132,0.132,0.13

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",0.061,0.063,0.062

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",0.131,0.131,0.132

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numba - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",0.268,0.261,0.261

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",0.62,0.619,0.617

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",1.408,1.401,1.398

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Numpy - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",2.651,2.684,2.675

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numba - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",0.264,0.266,0.26

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",0.63,0.628,0.636

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",1.422,1.429,1.414

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Numpy - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",2.654,2.659,2.673

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: Aesara - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: Aesara - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: PyTorch - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: PyTorch - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 16384 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 16384 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 65536 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 65536 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 262144 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 262144 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: CPU - Backend: TensorFlow - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 1048576 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 1048576 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 4194304 - Benchmark: Equation of State",
Lower Results Are Better

"baseline-baseline-py-id",

"PyHPC Benchmarks 3.0 - Device: GPU - Backend: TensorFlow - Project Size: 4194304 - Benchmark: Isoneutral Mixing",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: GLM",
Lower Results Are Better

"baseline-baseline-py-id",295.164,291.588,294.042

"Scikit-Learn 1.2.2 - Benchmark: SAGA",
Lower Results Are Better

"baseline-baseline-py-id",877.847,837.585,888.854,845.371,883.92,874.532

"Scikit-Learn 1.2.2 - Benchmark: Tree",
Lower Results Are Better

"baseline-baseline-py-id",47.222,49.933,47.734,48.463

"Scikit-Learn 1.2.2 - Benchmark: Lasso",
Lower Results Are Better

"baseline-baseline-py-id",513.277,505.701,516.566

"Scikit-Learn 1.2.2 - Benchmark: Glmnet",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: Sparsify",
Lower Results Are Better

"baseline-baseline-py-id",128.918,123.527,130.132,124.505,129.327

"Scikit-Learn 1.2.2 - Benchmark: Plot Ward",
Lower Results Are Better

"baseline-baseline-py-id",57.945,57.407,58.12

"Scikit-Learn 1.2.2 - Benchmark: MNIST Dataset",
Lower Results Are Better

"baseline-baseline-py-id",67.765,64.832,64.084,66.369

"Scikit-Learn 1.2.2 - Benchmark: Plot Neighbors",
Lower Results Are Better

"baseline-baseline-py-id",145.483,144.272,153.717,147.77,145.648,151.584,145.789

"Scikit-Learn 1.2.2 - Benchmark: SGD Regression",
Lower Results Are Better

"baseline-baseline-py-id",104.861,109.644,103.527,107.898,103.743,108.214

"Scikit-Learn 1.2.2 - Benchmark: SGDOneClassSVM",
Lower Results Are Better

"baseline-baseline-py-id",387.86,373.94,377.418

"Scikit-Learn 1.2.2 - Benchmark: Plot Lasso Path",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: Isolation Forest",
Lower Results Are Better

"baseline-baseline-py-id",286.801,290.966,290.347

"Scikit-Learn 1.2.2 - Benchmark: Plot Fast KMeans",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: Text Vectorizers",
Lower Results Are Better

"baseline-baseline-py-id",60.759,60.524,61.158

"Scikit-Learn 1.2.2 - Benchmark: Plot Hierarchical",
Lower Results Are Better

"baseline-baseline-py-id",212.415,211.57,209.872

"Scikit-Learn 1.2.2 - Benchmark: Plot OMP vs. LARS",
Lower Results Are Better

"baseline-baseline-py-id",91.395,91.441,91.661

"Scikit-Learn 1.2.2 - Benchmark: Feature Expansions",
Lower Results Are Better

"baseline-baseline-py-id",129.842,132.821,131.169

"Scikit-Learn 1.2.2 - Benchmark: LocalOutlierFactor",
Lower Results Are Better

"baseline-baseline-py-id",53.149,53.763,53.481

"Scikit-Learn 1.2.2 - Benchmark: TSNE MNIST Dataset",
Lower Results Are Better

"baseline-baseline-py-id",236.106,236.862,237.627

"Scikit-Learn 1.2.2 - Benchmark: Isotonic / Logistic",
Lower Results Are Better

"baseline-baseline-py-id",1455.619,1495.129,1461.67

"Scikit-Learn 1.2.2 - Benchmark: Plot Incremental PCA",
Lower Results Are Better

"baseline-baseline-py-id",30.983,30.978,31.056

"Scikit-Learn 1.2.2 - Benchmark: Hist Gradient Boosting",
Lower Results Are Better

"baseline-baseline-py-id",109.799,109.725,110.427

"Scikit-Learn 1.2.2 - Benchmark: Plot Parallel Pairwise",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: Isotonic / Pathological",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: RCV1 Logreg Convergencet",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: Sample Without Replacement",
Lower Results Are Better

"baseline-baseline-py-id",159.245,158.375,157.167

"Scikit-Learn 1.2.2 - Benchmark: Covertype Dataset Benchmark",
Lower Results Are Better

"baseline-baseline-py-id",383.45,366.883,378.103

"Scikit-Learn 1.2.2 - Benchmark: Hist Gradient Boosting Adult",
Lower Results Are Better

"baseline-baseline-py-id",103.145,104.849,102.496

"Scikit-Learn 1.2.2 - Benchmark: Isotonic / Perturbed Logarithm",
Lower Results Are Better

"baseline-baseline-py-id",1770.435,1757.818,1836.525

"Scikit-Learn 1.2.2 - Benchmark: Hist Gradient Boosting Threading",
Lower Results Are Better

"baseline-baseline-py-id",110.404,109.958,110.282

"Scikit-Learn 1.2.2 - Benchmark: Plot Singular Value Decomposition",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: Hist Gradient Boosting Higgs Boson",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: 20 Newsgroups / Logistic Regression",
Lower Results Are Better

"baseline-baseline-py-id",41.822,41.155,41.579

"Scikit-Learn 1.2.2 - Benchmark: Plot Polynomial Kernel Approximation",
Lower Results Are Better

"baseline-baseline-py-id",148.295,151.794,152.108

"Scikit-Learn 1.2.2 - Benchmark: Plot Non-Negative Matrix Factorization",
Lower Results Are Better

"baseline-baseline-py-id",

"Scikit-Learn 1.2.2 - Benchmark: Hist Gradient Boosting Categorical Only",
Lower Results Are Better

"baseline-baseline-py-id",18.568,18.695,18.475

"Scikit-Learn 1.2.2 - Benchmark: Kernel PCA Solvers / Time vs. N Samples",
Lower Results Are Better

"baseline-baseline-py-id",72.44,72.556,72.626

"Scikit-Learn 1.2.2 - Benchmark: Kernel PCA Solvers / Time vs. N Components",
Lower Results Are Better

"baseline-baseline-py-id",37.126,36.952,37.649

"Scikit-Learn 1.2.2 - Benchmark: Sparse Random Projections / 100 Iterations",
Lower Results Are Better

"baseline-baseline-py-id",609.922,621.153,609.565



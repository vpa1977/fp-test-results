#####
baseline-baseline-py-id - Run 1
2024-02-23 10:06:06
#####
Benchmarking on 12 threads
Warming up with batch_size=1:   0%|          | 0/1 [00:00<?, ?it/s]Warming up with batch_size=1: 100%|██████████| 1/1 [00:00<00:00,  4.25it/s]Warming up with batch_size=1: 100%|██████████| 1/1 [00:00<00:00,  4.25it/s]
Warning: module Bottleneck is treated as a zero-op.
Warning: module ResNet is treated as a zero-op.
Warning! No positional inputs found for a module, assuming batch size is 1.
ResNet(
  60.19 M, 100.000% Params, 11.58 GMac, 100.000% MACs, 
  (conv1): Conv2d(9.41 k, 0.016% Params, 118.01 MMac, 1.019% MACs, 3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(128, 0.000% Params, 1.61 MMac, 0.014% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(0, 0.000% Params, 802.82 KMac, 0.007% MACs, inplace=True)
  (maxpool): MaxPool2d(0, 0.000% Params, 802.82 KMac, 0.007% MACs, kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    215.81 k, 0.359% Params, 680.39 MMac, 5.875% MACs, 
    (0): Bottleneck(
      75.01 k, 0.125% Params, 236.43 MMac, 2.042% MACs, 
      (conv1): Conv2d(4.1 k, 0.007% Params, 12.85 MMac, 0.111% MACs, 64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
      (downsample): Sequential(
        16.9 k, 0.028% Params, 52.99 MMac, 0.458% MACs, 
        (0): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      70.4 k, 0.117% Params, 221.98 MMac, 1.917% MACs, 
      (conv1): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
    )
    (2): Bottleneck(
      70.4 k, 0.117% Params, 221.98 MMac, 1.917% MACs, 
      (conv1): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
    )
  )
  (layer2): Sequential(
    2.34 M, 3.887% Params, 1.92 GMac, 16.555% MACs, 
    (0): Bottleneck(
      379.39 k, 0.630% Params, 376.02 MMac, 3.247% MACs, 
      (conv1): Conv2d(32.77 k, 0.054% Params, 102.76 MMac, 0.887% MACs, 256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 802.82 KMac, 0.007% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 903.17 KMac, 0.008% MACs, inplace=True)
      (downsample): Sequential(
        132.1 k, 0.219% Params, 103.56 MMac, 0.894% MACs, 
        (0): Conv2d(131.07 k, 0.218% Params, 102.76 MMac, 0.887% MACs, 256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (2): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (3): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (4): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (5): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (6): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (7): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
  )
  (layer3): Sequential(
    40.61 M, 67.473% Params, 8.05 GMac, 69.501% MACs, 
    (0): Bottleneck(
      1.51 M, 2.513% Params, 374.26 MMac, 3.232% MACs, 
      (conv1): Conv2d(131.07 k, 0.218% Params, 102.76 MMac, 0.887% MACs, 512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 401.41 KMac, 0.003% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 451.58 KMac, 0.004% MACs, inplace=True)
      (downsample): Sequential(
        526.34 k, 0.874% Params, 103.16 MMac, 0.891% MACs, 
        (0): Conv2d(524.29 k, 0.871% Params, 102.76 MMac, 0.887% MACs, 512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (2): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (3): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (4): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (5): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (6): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (7): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (8): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (9): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (10): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (11): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (12): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (13): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (14): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (15): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (16): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (17): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (18): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (19): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (20): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (21): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (22): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (23): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (24): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (25): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (26): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (27): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (28): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (29): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (30): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (31): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (32): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (33): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (34): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (35): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
  )
  (layer4): Sequential(
    14.96 M, 24.861% Params, 811.02 MMac, 7.003% MACs, 
    (0): Bottleneck(
      6.04 M, 10.034% Params, 373.38 MMac, 3.224% MACs, 
      (conv1): Conv2d(524.29 k, 0.871% Params, 102.76 MMac, 0.887% MACs, 1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 200.7 KMac, 0.002% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 225.79 KMac, 0.002% MACs, inplace=True)
      (downsample): Sequential(
        2.1 M, 3.491% Params, 102.96 MMac, 0.889% MACs, 
        (0): Conv2d(2.1 M, 3.484% Params, 102.76 MMac, 0.887% MACs, 1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      4.46 M, 7.414% Params, 218.82 MMac, 1.890% MACs, 
      (conv1): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 150.53 KMac, 0.001% MACs, inplace=True)
    )
    (2): Bottleneck(
      4.46 M, 7.414% Params, 218.82 MMac, 1.890% MACs, 
      (conv1): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 150.53 KMac, 0.001% MACs, inplace=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(0, 0.000% Params, 100.35 KMac, 0.001% MACs, output_size=(1, 1))
  (fc): Linear(2.05 M, 3.404% Params, 2.05 MMac, 0.018% MACs, in_features=2048, out_features=1000, bias=True)
)
Warming up with batch_size=1:   0%|          | 0/100 [00:00<?, ?it/s]Warming up with batch_size=1:  10%|█         | 10/100 [00:00<00:00, 95.80it/s]Warming up with batch_size=1:  20%|██        | 20/100 [00:00<00:00, 95.92it/s]Warming up with batch_size=1:  30%|███       | 30/100 [00:00<00:00, 95.97it/s]Warming up with batch_size=1:  40%|████      | 40/100 [00:00<00:00, 96.02it/s]Warming up with batch_size=1:  50%|█████     | 50/100 [00:00<00:00, 96.12it/s]Warming up with batch_size=1:  60%|██████    | 60/100 [00:00<00:00, 96.17it/s]Warming up with batch_size=1:  70%|███████   | 70/100 [00:00<00:00, 96.24it/s]Warming up with batch_size=1:  80%|████████  | 80/100 [00:00<00:00, 96.22it/s]Warming up with batch_size=1:  90%|█████████ | 90/100 [00:00<00:00, 96.21it/s]Warming up with batch_size=1: 100%|██████████| 100/100 [00:01<00:00, 96.24it/s]Warming up with batch_size=1: 100%|██████████| 100/100 [00:01<00:00, 96.15it/s]
STAGE:2024-02-23 10:05:34 177869:177869 ActivityProfilerController.cpp:312] Completed Stage: Warm Up
STAGE:2024-02-23 10:05:34 177869:177869 ActivityProfilerController.cpp:318] Completed Stage: Collection
STAGE:2024-02-23 10:05:34 177869:177869 ActivityProfilerController.cpp:322] Completed Stage: Post Processing
Measuring inference for batch_size=1:   0%|          | 0/1000 [00:00<?, ?it/s]Measuring inference for batch_size=1:   1%|          | 8/1000 [00:00<00:13, 71.66it/s]Measuring inference for batch_size=1:   2%|▏         | 16/1000 [00:00<00:13, 72.01it/s]Measuring inference for batch_size=1:   2%|▏         | 24/1000 [00:00<00:13, 72.12it/s]Measuring inference for batch_size=1:   3%|▎         | 32/1000 [00:00<00:13, 72.25it/s]Measuring inference for batch_size=1:   4%|▍         | 40/1000 [00:00<00:13, 72.27it/s]Measuring inference for batch_size=1:   5%|▍         | 48/1000 [00:00<00:13, 72.32it/s]Measuring inference for batch_size=1:   6%|▌         | 56/1000 [00:00<00:13, 72.33it/s]Measuring inference for batch_size=1:   6%|▋         | 64/1000 [00:00<00:12, 72.34it/s]Measuring inference for batch_size=1:   7%|▋         | 72/1000 [00:00<00:12, 72.39it/s]Measuring inference for batch_size=1:   8%|▊         | 80/1000 [00:01<00:12, 72.39it/s]Measuring inference for batch_size=1:   9%|▉         | 88/1000 [00:01<00:12, 72.40it/s]Measuring inference for batch_size=1:  10%|▉         | 96/1000 [00:01<00:12, 72.42it/s]Measuring inference for batch_size=1:  10%|█         | 104/1000 [00:01<00:12, 72.42it/s]Measuring inference for batch_size=1:  11%|█         | 112/1000 [00:01<00:12, 72.43it/s]Measuring inference for batch_size=1:  12%|█▏        | 120/1000 [00:01<00:12, 72.44it/s]Measuring inference for batch_size=1:  13%|█▎        | 128/1000 [00:01<00:12, 72.46it/s]Measuring inference for batch_size=1:  14%|█▎        | 136/1000 [00:01<00:11, 72.47it/s]Measuring inference for batch_size=1:  14%|█▍        | 144/1000 [00:01<00:11, 72.47it/s]Measuring inference for batch_size=1:  15%|█▌        | 152/1000 [00:02<00:11, 72.47it/s]Measuring inference for batch_size=1:  16%|█▌        | 160/1000 [00:02<00:11, 72.45it/s]Measuring inference for batch_size=1:  17%|█▋        | 168/1000 [00:02<00:11, 72.47it/s]Measuring inference for batch_size=1:  18%|█▊        | 176/1000 [00:02<00:11, 72.49it/s]Measuring inference for batch_size=1:  18%|█▊        | 184/1000 [00:02<00:11, 72.51it/s]Measuring inference for batch_size=1:  19%|█▉        | 192/1000 [00:02<00:11, 72.51it/s]Measuring inference for batch_size=1:  20%|██        | 200/1000 [00:02<00:11, 72.54it/s]Measuring inference for batch_size=1:  21%|██        | 208/1000 [00:02<00:10, 72.56it/s]Measuring inference for batch_size=1:  22%|██▏       | 216/1000 [00:02<00:10, 72.55it/s]Measuring inference for batch_size=1:  22%|██▏       | 224/1000 [00:03<00:10, 72.47it/s]Measuring inference for batch_size=1:  23%|██▎       | 232/1000 [00:03<00:10, 72.45it/s]Measuring inference for batch_size=1:  24%|██▍       | 240/1000 [00:03<00:10, 72.43it/s]Measuring inference for batch_size=1:  25%|██▍       | 248/1000 [00:03<00:10, 72.42it/s]Measuring inference for batch_size=1:  26%|██▌       | 256/1000 [00:03<00:10, 72.41it/s]Measuring inference for batch_size=1:  26%|██▋       | 264/1000 [00:03<00:10, 72.41it/s]Measuring inference for batch_size=1:  27%|██▋       | 272/1000 [00:03<00:10, 72.39it/s]Measuring inference for batch_size=1:  28%|██▊       | 280/1000 [00:03<00:09, 72.36it/s]Measuring inference for batch_size=1:  29%|██▉       | 288/1000 [00:03<00:09, 72.37it/s]Measuring inference for batch_size=1:  30%|██▉       | 296/1000 [00:04<00:09, 72.40it/s]Measuring inference for batch_size=1:  30%|███       | 304/1000 [00:04<00:09, 72.43it/s]Measuring inference for batch_size=1:  31%|███       | 312/1000 [00:04<00:09, 72.45it/s]Measuring inference for batch_size=1:  32%|███▏      | 320/1000 [00:04<00:09, 72.48it/s]Measuring inference for batch_size=1:  33%|███▎      | 328/1000 [00:04<00:09, 72.50it/s]Measuring inference for batch_size=1:  34%|███▎      | 336/1000 [00:04<00:09, 72.51it/s]Measuring inference for batch_size=1:  34%|███▍      | 344/1000 [00:04<00:09, 72.46it/s]Measuring inference for batch_size=1:  35%|███▌      | 352/1000 [00:04<00:08, 72.43it/s]Measuring inference for batch_size=1:  36%|███▌      | 360/1000 [00:04<00:08, 72.39it/s]Measuring inference for batch_size=1:  37%|███▋      | 368/1000 [00:05<00:08, 72.41it/s]Measuring inference for batch_size=1:  38%|███▊      | 376/1000 [00:05<00:08, 72.40it/s]Measuring inference for batch_size=1:  38%|███▊      | 384/1000 [00:05<00:08, 72.37it/s]Measuring inference for batch_size=1:  39%|███▉      | 392/1000 [00:05<00:08, 72.36it/s]Measuring inference for batch_size=1:  40%|████      | 400/1000 [00:05<00:08, 72.39it/s]Measuring inference for batch_size=1:  41%|████      | 408/1000 [00:05<00:08, 72.39it/s]Measuring inference for batch_size=1:  42%|████▏     | 416/1000 [00:05<00:08, 72.41it/s]Measuring inference for batch_size=1:  42%|████▏     | 424/1000 [00:05<00:07, 72.42it/s]Measuring inference for batch_size=1:  43%|████▎     | 432/1000 [00:05<00:07, 72.43it/s]Measuring inference for batch_size=1:  44%|████▍     | 440/1000 [00:06<00:07, 72.47it/s]Measuring inference for batch_size=1:  45%|████▍     | 448/1000 [00:06<00:07, 72.48it/s]Measuring inference for batch_size=1:  46%|████▌     | 456/1000 [00:06<00:07, 72.48it/s]Measuring inference for batch_size=1:  46%|████▋     | 464/1000 [00:06<00:07, 72.49it/s]Measuring inference for batch_size=1:  47%|████▋     | 472/1000 [00:06<00:07, 72.50it/s]Measuring inference for batch_size=1:  48%|████▊     | 480/1000 [00:06<00:07, 72.51it/s]Measuring inference for batch_size=1:  49%|████▉     | 488/1000 [00:06<00:07, 72.51it/s]Measuring inference for batch_size=1:  50%|████▉     | 496/1000 [00:06<00:06, 72.43it/s]Measuring inference for batch_size=1:  50%|█████     | 504/1000 [00:06<00:06, 72.41it/s]Measuring inference for batch_size=1:  51%|█████     | 512/1000 [00:07<00:06, 72.41it/s]Measuring inference for batch_size=1:  52%|█████▏    | 520/1000 [00:07<00:06, 72.51it/s]Measuring inference for batch_size=1:  53%|█████▎    | 528/1000 [00:07<00:06, 72.54it/s]Measuring inference for batch_size=1:  54%|█████▎    | 536/1000 [00:07<00:06, 72.57it/s]Measuring inference for batch_size=1:  54%|█████▍    | 544/1000 [00:07<00:06, 72.56it/s]Measuring inference for batch_size=1:  55%|█████▌    | 552/1000 [00:07<00:06, 72.58it/s]Measuring inference for batch_size=1:  56%|█████▌    | 560/1000 [00:07<00:06, 72.55it/s]Measuring inference for batch_size=1:  57%|█████▋    | 568/1000 [00:07<00:05, 72.47it/s]Measuring inference for batch_size=1:  58%|█████▊    | 576/1000 [00:07<00:05, 72.43it/s]Measuring inference for batch_size=1:  58%|█████▊    | 584/1000 [00:08<00:05, 72.48it/s]Measuring inference for batch_size=1:  59%|█████▉    | 592/1000 [00:08<00:05, 72.52it/s]Measuring inference for batch_size=1:  60%|██████    | 600/1000 [00:08<00:05, 72.56it/s]Measuring inference for batch_size=1:  61%|██████    | 608/1000 [00:08<00:05, 72.57it/s]Measuring inference for batch_size=1:  62%|██████▏   | 616/1000 [00:08<00:05, 72.56it/s]Measuring inference for batch_size=1:  62%|██████▏   | 624/1000 [00:08<00:05, 72.59it/s]Measuring inference for batch_size=1:  63%|██████▎   | 632/1000 [00:08<00:05, 72.57it/s]Measuring inference for batch_size=1:  64%|██████▍   | 640/1000 [00:08<00:04, 72.54it/s]Measuring inference for batch_size=1:  65%|██████▍   | 648/1000 [00:08<00:04, 72.56it/s]Measuring inference for batch_size=1:  66%|██████▌   | 656/1000 [00:09<00:04, 72.61it/s]Measuring inference for batch_size=1:  66%|██████▋   | 664/1000 [00:09<00:04, 72.65it/s]Measuring inference for batch_size=1:  67%|██████▋   | 672/1000 [00:09<00:04, 72.69it/s]Measuring inference for batch_size=1:  68%|██████▊   | 680/1000 [00:09<00:04, 72.69it/s]Measuring inference for batch_size=1:  69%|██████▉   | 688/1000 [00:09<00:04, 72.70it/s]Measuring inference for batch_size=1:  70%|██████▉   | 696/1000 [00:09<00:04, 72.69it/s]Measuring inference for batch_size=1:  70%|███████   | 704/1000 [00:09<00:04, 72.68it/s]Measuring inference for batch_size=1:  71%|███████   | 712/1000 [00:09<00:03, 72.58it/s]Measuring inference for batch_size=1:  72%|███████▏  | 720/1000 [00:09<00:03, 72.54it/s]Measuring inference for batch_size=1:  73%|███████▎  | 728/1000 [00:10<00:03, 72.51it/s]Measuring inference for batch_size=1:  74%|███████▎  | 736/1000 [00:10<00:03, 72.55it/s]Measuring inference for batch_size=1:  74%|███████▍  | 744/1000 [00:10<00:03, 72.57it/s]Measuring inference for batch_size=1:  75%|███████▌  | 752/1000 [00:10<00:03, 72.60it/s]Measuring inference for batch_size=1:  76%|███████▌  | 760/1000 [00:10<00:03, 72.63it/s]Measuring inference for batch_size=1:  77%|███████▋  | 768/1000 [00:10<00:03, 72.65it/s]Measuring inference for batch_size=1:  78%|███████▊  | 776/1000 [00:10<00:03, 72.65it/s]Measuring inference for batch_size=1:  78%|███████▊  | 784/1000 [00:10<00:02, 72.59it/s]Measuring inference for batch_size=1:  79%|███████▉  | 792/1000 [00:10<00:02, 72.57it/s]Measuring inference for batch_size=1:  80%|████████  | 800/1000 [00:11<00:02, 72.61it/s]Measuring inference for batch_size=1:  81%|████████  | 808/1000 [00:11<00:02, 72.64it/s]Measuring inference for batch_size=1:  82%|████████▏ | 816/1000 [00:11<00:02, 72.68it/s]Measuring inference for batch_size=1:  82%|████████▏ | 824/1000 [00:11<00:02, 72.73it/s]Measuring inference for batch_size=1:  83%|████████▎ | 832/1000 [00:11<00:02, 72.76it/s]Measuring inference for batch_size=1:  84%|████████▍ | 840/1000 [00:11<00:02, 72.78it/s]Measuring inference for batch_size=1:  85%|████████▍ | 848/1000 [00:11<00:02, 72.76it/s]Measuring inference for batch_size=1:  86%|████████▌ | 856/1000 [00:11<00:01, 72.73it/s]Measuring inference for batch_size=1:  86%|████████▋ | 864/1000 [00:11<00:01, 72.72it/s]Measuring inference for batch_size=1:  87%|████████▋ | 872/1000 [00:12<00:01, 72.70it/s]Measuring inference for batch_size=1:  88%|████████▊ | 880/1000 [00:12<00:01, 72.70it/s]Measuring inference for batch_size=1:  89%|████████▉ | 888/1000 [00:12<00:01, 72.74it/s]Measuring inference for batch_size=1:  90%|████████▉ | 896/1000 [00:12<00:01, 72.77it/s]Measuring inference for batch_size=1:  90%|█████████ | 904/1000 [00:12<00:01, 72.79it/s]Measuring inference for batch_size=1:  91%|█████████ | 912/1000 [00:12<00:01, 72.80it/s]Measuring inference for batch_size=1:  92%|█████████▏| 920/1000 [00:12<00:01, 72.80it/s]Measuring inference for batch_size=1:  93%|█████████▎| 928/1000 [00:12<00:00, 72.74it/s]Measuring inference for batch_size=1:  94%|█████████▎| 936/1000 [00:12<00:00, 72.74it/s]Measuring inference for batch_size=1:  94%|█████████▍| 944/1000 [00:13<00:00, 72.73it/s]Measuring inference for batch_size=1:  95%|█████████▌| 952/1000 [00:13<00:00, 72.78it/s]Measuring inference for batch_size=1:  96%|█████████▌| 960/1000 [00:13<00:00, 72.81it/s]Measuring inference for batch_size=1:  97%|█████████▋| 968/1000 [00:13<00:00, 72.84it/s]Measuring inference for batch_size=1:  98%|█████████▊| 976/1000 [00:13<00:00, 72.84it/s]Measuring inference for batch_size=1:  98%|█████████▊| 984/1000 [00:13<00:00, 72.84it/s]Measuring inference for batch_size=1:  99%|█████████▉| 992/1000 [00:13<00:00, 72.85it/s]Measuring inference for batch_size=1: 100%|██████████| 1000/1000 [00:13<00:00, 72.79it/s]Measuring inference for batch_size=1: 100%|██████████| 1000/1000 [00:13<00:00, 72.54it/s]
Unable to measure energy consumption. Device must be a NVIDIA Jetson.
Warming up with batch_size=256:   0%|          | 0/100 [00:00<?, ?it/s]Warming up with batch_size=256:   8%|▊         | 8/100 [00:00<00:01, 72.05it/s]Warming up with batch_size=256:  16%|█▌        | 16/100 [00:00<00:01, 72.26it/s]Warming up with batch_size=256:  24%|██▍       | 24/100 [00:00<00:01, 72.27it/s]Warming up with batch_size=256:  32%|███▏      | 32/100 [00:00<00:00, 72.25it/s]Warming up with batch_size=256:  40%|████      | 40/100 [00:00<00:00, 72.25it/s]Warming up with batch_size=256:  48%|████▊     | 48/100 [00:00<00:00, 72.25it/s]Warming up with batch_size=256:  56%|█████▌    | 56/100 [00:00<00:00, 72.27it/s]Warming up with batch_size=256:  64%|██████▍   | 64/100 [00:00<00:00, 72.25it/s]Warming up with batch_size=256:  72%|███████▏  | 72/100 [00:00<00:00, 72.19it/s]Warming up with batch_size=256:  80%|████████  | 80/100 [00:01<00:00, 72.14it/s]Warming up with batch_size=256:  88%|████████▊ | 88/100 [00:01<00:00, 72.11it/s]Warming up with batch_size=256:  96%|█████████▌| 96/100 [00:01<00:00, 72.07it/s]Warming up with batch_size=256: 100%|██████████| 100/100 [00:01<00:00, 72.17it/s]
STAGE:2024-02-23 10:05:49 177869:177869 ActivityProfilerController.cpp:312] Completed Stage: Warm Up
STAGE:2024-02-23 10:05:49 177869:177869 ActivityProfilerController.cpp:318] Completed Stage: Collection
STAGE:2024-02-23 10:05:49 177869:177869 ActivityProfilerController.cpp:322] Completed Stage: Post Processing
Measuring inference for batch_size=256:   0%|          | 0/1000 [00:00<?, ?it/s]Measuring inference for batch_size=256:   1%|          | 8/1000 [00:00<00:13, 70.96it/s]Measuring inference for batch_size=256:   2%|▏         | 16/1000 [00:00<00:13, 71.20it/s]Measuring inference for batch_size=256:   2%|▏         | 24/1000 [00:00<00:13, 71.24it/s]Measuring inference for batch_size=256:   3%|▎         | 32/1000 [00:00<00:13, 71.22it/s]Measuring inference for batch_size=256:   4%|▍         | 40/1000 [00:00<00:13, 71.28it/s]Measuring inference for batch_size=256:   5%|▍         | 48/1000 [00:00<00:13, 71.26it/s]Measuring inference for batch_size=256:   6%|▌         | 56/1000 [00:00<00:13, 71.31it/s]Measuring inference for batch_size=256:   6%|▋         | 64/1000 [00:00<00:13, 71.36it/s]Measuring inference for batch_size=256:   7%|▋         | 72/1000 [00:01<00:12, 71.41it/s]Measuring inference for batch_size=256:   8%|▊         | 80/1000 [00:01<00:12, 71.44it/s]Measuring inference for batch_size=256:   9%|▉         | 88/1000 [00:01<00:12, 71.48it/s]Measuring inference for batch_size=256:  10%|▉         | 96/1000 [00:01<00:12, 71.43it/s]Measuring inference for batch_size=256:  10%|█         | 104/1000 [00:01<00:12, 71.45it/s]Measuring inference for batch_size=256:  11%|█         | 112/1000 [00:01<00:12, 71.45it/s]Measuring inference for batch_size=256:  12%|█▏        | 120/1000 [00:01<00:12, 71.48it/s]Measuring inference for batch_size=256:  13%|█▎        | 128/1000 [00:01<00:12, 71.45it/s]Measuring inference for batch_size=256:  14%|█▎        | 136/1000 [00:01<00:12, 71.47it/s]Measuring inference for batch_size=256:  14%|█▍        | 144/1000 [00:02<00:11, 71.48it/s]Measuring inference for batch_size=256:  15%|█▌        | 152/1000 [00:02<00:11, 71.52it/s]Measuring inference for batch_size=256:  16%|█▌        | 160/1000 [00:02<00:11, 71.53it/s]Measuring inference for batch_size=256:  17%|█▋        | 168/1000 [00:02<00:11, 71.48it/s]Measuring inference for batch_size=256:  18%|█▊        | 176/1000 [00:02<00:11, 71.41it/s]Measuring inference for batch_size=256:  18%|█▊        | 184/1000 [00:02<00:11, 71.39it/s]Measuring inference for batch_size=256:  19%|█▉        | 192/1000 [00:02<00:11, 71.33it/s]Measuring inference for batch_size=256:  20%|██        | 200/1000 [00:02<00:11, 71.36it/s]Measuring inference for batch_size=256:  21%|██        | 208/1000 [00:02<00:11, 71.41it/s]Measuring inference for batch_size=256:  22%|██▏       | 216/1000 [00:03<00:10, 71.42it/s]Measuring inference for batch_size=256:  22%|██▏       | 224/1000 [00:03<00:10, 71.43it/s]Measuring inference for batch_size=256:  23%|██▎       | 232/1000 [00:03<00:10, 71.44it/s]Measuring inference for batch_size=256:  24%|██▍       | 240/1000 [00:03<00:10, 71.33it/s]Measuring inference for batch_size=256:  25%|██▍       | 248/1000 [00:03<00:10, 71.30it/s]Measuring inference for batch_size=256:  26%|██▌       | 256/1000 [00:03<00:10, 71.25it/s]Measuring inference for batch_size=256:  26%|██▋       | 264/1000 [00:03<00:10, 71.27it/s]Measuring inference for batch_size=256:  27%|██▋       | 272/1000 [00:03<00:10, 71.25it/s]Measuring inference for batch_size=256:  28%|██▊       | 280/1000 [00:03<00:10, 71.28it/s]Measuring inference for batch_size=256:  29%|██▉       | 288/1000 [00:04<00:09, 71.26it/s]Measuring inference for batch_size=256:  30%|██▉       | 296/1000 [00:04<00:09, 71.27it/s]Measuring inference for batch_size=256:  30%|███       | 304/1000 [00:04<00:09, 71.26it/s]Measuring inference for batch_size=256:  31%|███       | 312/1000 [00:04<00:09, 71.28it/s]Measuring inference for batch_size=256:  32%|███▏      | 320/1000 [00:04<00:09, 71.27it/s]Measuring inference for batch_size=256:  33%|███▎      | 328/1000 [00:04<00:09, 71.28it/s]Measuring inference for batch_size=256:  34%|███▎      | 336/1000 [00:04<00:09, 71.26it/s]Measuring inference for batch_size=256:  34%|███▍      | 344/1000 [00:04<00:09, 71.28it/s]Measuring inference for batch_size=256:  35%|███▌      | 352/1000 [00:04<00:09, 71.27it/s]Measuring inference for batch_size=256:  36%|███▌      | 360/1000 [00:05<00:08, 71.29it/s]Measuring inference for batch_size=256:  37%|███▋      | 368/1000 [00:05<00:08, 71.28it/s]Measuring inference for batch_size=256:  38%|███▊      | 376/1000 [00:05<00:08, 71.28it/s]Measuring inference for batch_size=256:  38%|███▊      | 384/1000 [00:05<00:08, 71.26it/s]Measuring inference for batch_size=256:  39%|███▉      | 392/1000 [00:05<00:08, 71.28it/s]Measuring inference for batch_size=256:  40%|████      | 400/1000 [00:05<00:08, 71.24it/s]Measuring inference for batch_size=256:  41%|████      | 408/1000 [00:05<00:08, 71.25it/s]Measuring inference for batch_size=256:  42%|████▏     | 416/1000 [00:05<00:08, 71.22it/s]Measuring inference for batch_size=256:  42%|████▏     | 424/1000 [00:05<00:08, 71.24it/s]Measuring inference for batch_size=256:  43%|████▎     | 432/1000 [00:06<00:07, 71.23it/s]Measuring inference for batch_size=256:  44%|████▍     | 440/1000 [00:06<00:07, 71.22it/s]Measuring inference for batch_size=256:  45%|████▍     | 448/1000 [00:06<00:07, 71.21it/s]Measuring inference for batch_size=256:  46%|████▌     | 456/1000 [00:06<00:07, 71.25it/s]Measuring inference for batch_size=256:  46%|████▋     | 464/1000 [00:06<00:07, 71.21it/s]Measuring inference for batch_size=256:  47%|████▋     | 472/1000 [00:06<00:07, 71.22it/s]Measuring inference for batch_size=256:  48%|████▊     | 480/1000 [00:06<00:07, 71.21it/s]Measuring inference for batch_size=256:  49%|████▉     | 488/1000 [00:06<00:07, 71.24it/s]Measuring inference for batch_size=256:  50%|████▉     | 496/1000 [00:06<00:07, 71.24it/s]Measuring inference for batch_size=256:  50%|█████     | 504/1000 [00:07<00:06, 71.30it/s]Measuring inference for batch_size=256:  51%|█████     | 512/1000 [00:07<00:06, 71.33it/s]Measuring inference for batch_size=256:  52%|█████▏    | 520/1000 [00:07<00:06, 71.31it/s]Measuring inference for batch_size=256:  53%|█████▎    | 528/1000 [00:07<00:06, 71.25it/s]Measuring inference for batch_size=256:  54%|█████▎    | 536/1000 [00:07<00:06, 71.24it/s]Measuring inference for batch_size=256:  54%|█████▍    | 544/1000 [00:07<00:06, 71.20it/s]Measuring inference for batch_size=256:  55%|█████▌    | 552/1000 [00:07<00:06, 71.22it/s]Measuring inference for batch_size=256:  56%|█████▌    | 560/1000 [00:07<00:06, 71.22it/s]Measuring inference for batch_size=256:  57%|█████▋    | 568/1000 [00:07<00:06, 71.22it/s]Measuring inference for batch_size=256:  58%|█████▊    | 576/1000 [00:08<00:05, 71.17it/s]Measuring inference for batch_size=256:  58%|█████▊    | 584/1000 [00:08<00:05, 71.19it/s]Measuring inference for batch_size=256:  59%|█████▉    | 592/1000 [00:08<00:05, 71.18it/s]Measuring inference for batch_size=256:  60%|██████    | 600/1000 [00:08<00:05, 71.20it/s]Measuring inference for batch_size=256:  61%|██████    | 608/1000 [00:08<00:05, 71.20it/s]Measuring inference for batch_size=256:  62%|██████▏   | 616/1000 [00:08<00:05, 71.24it/s]Measuring inference for batch_size=256:  62%|██████▏   | 624/1000 [00:08<00:05, 71.24it/s]Measuring inference for batch_size=256:  63%|██████▎   | 632/1000 [00:08<00:05, 71.23it/s]Measuring inference for batch_size=256:  64%|██████▍   | 640/1000 [00:08<00:05, 71.24it/s]Measuring inference for batch_size=256:  65%|██████▍   | 648/1000 [00:09<00:04, 71.23it/s]Measuring inference for batch_size=256:  66%|██████▌   | 656/1000 [00:09<00:04, 71.21it/s]Measuring inference for batch_size=256:  66%|██████▋   | 664/1000 [00:09<00:04, 71.23it/s]Measuring inference for batch_size=256:  67%|██████▋   | 672/1000 [00:09<00:04, 71.22it/s]Measuring inference for batch_size=256:  68%|██████▊   | 680/1000 [00:09<00:04, 71.22it/s]Measuring inference for batch_size=256:  69%|██████▉   | 688/1000 [00:09<00:04, 71.19it/s]Measuring inference for batch_size=256:  70%|██████▉   | 696/1000 [00:09<00:04, 71.20it/s]Measuring inference for batch_size=256:  70%|███████   | 704/1000 [00:09<00:04, 71.15it/s]Measuring inference for batch_size=256:  71%|███████   | 712/1000 [00:09<00:04, 71.16it/s]Measuring inference for batch_size=256:  72%|███████▏  | 720/1000 [00:10<00:03, 71.14it/s]Measuring inference for batch_size=256:  73%|███████▎  | 728/1000 [00:10<00:03, 71.15it/s]Measuring inference for batch_size=256:  74%|███████▎  | 736/1000 [00:10<00:03, 71.10it/s]Measuring inference for batch_size=256:  74%|███████▍  | 744/1000 [00:10<00:03, 71.13it/s]Measuring inference for batch_size=256:  75%|███████▌  | 752/1000 [00:10<00:03, 71.12it/s]Measuring inference for batch_size=256:  76%|███████▌  | 760/1000 [00:10<00:03, 71.12it/s]Measuring inference for batch_size=256:  77%|███████▋  | 768/1000 [00:10<00:03, 71.13it/s]Measuring inference for batch_size=256:  78%|███████▊  | 776/1000 [00:10<00:03, 71.22it/s]Measuring inference for batch_size=256:  78%|███████▊  | 784/1000 [00:10<00:03, 71.23it/s]Measuring inference for batch_size=256:  79%|███████▉  | 792/1000 [00:11<00:02, 71.30it/s]Measuring inference for batch_size=256:  80%|████████  | 800/1000 [00:11<00:02, 71.31it/s]Measuring inference for batch_size=256:  81%|████████  | 808/1000 [00:11<00:02, 71.25it/s]Measuring inference for batch_size=256:  82%|████████▏ | 816/1000 [00:11<00:02, 71.20it/s]Measuring inference for batch_size=256:  82%|████████▏ | 824/1000 [00:11<00:02, 71.19it/s]Measuring inference for batch_size=256:  83%|████████▎ | 832/1000 [00:11<00:02, 71.15it/s]Measuring inference for batch_size=256:  84%|████████▍ | 840/1000 [00:11<00:02, 71.18it/s]Measuring inference for batch_size=256:  85%|████████▍ | 848/1000 [00:11<00:02, 71.16it/s]Measuring inference for batch_size=256:  86%|████████▌ | 856/1000 [00:12<00:02, 71.16it/s]Measuring inference for batch_size=256:  86%|████████▋ | 864/1000 [00:12<00:01, 71.12it/s]Measuring inference for batch_size=256:  87%|████████▋ | 872/1000 [00:12<00:01, 71.14it/s]Measuring inference for batch_size=256:  88%|████████▊ | 880/1000 [00:12<00:01, 71.14it/s]Measuring inference for batch_size=256:  89%|████████▉ | 888/1000 [00:12<00:01, 71.14it/s]Measuring inference for batch_size=256:  90%|████████▉ | 896/1000 [00:12<00:01, 71.12it/s]Measuring inference for batch_size=256:  90%|█████████ | 904/1000 [00:12<00:01, 71.15it/s]Measuring inference for batch_size=256:  91%|█████████ | 912/1000 [00:12<00:01, 71.15it/s]Measuring inference for batch_size=256:  92%|█████████▏| 920/1000 [00:12<00:01, 71.23it/s]Measuring inference for batch_size=256:  93%|█████████▎| 928/1000 [00:13<00:01, 71.26it/s]Measuring inference for batch_size=256:  94%|█████████▎| 936/1000 [00:13<00:00, 71.27it/s]Measuring inference for batch_size=256:  94%|█████████▍| 944/1000 [00:13<00:00, 71.26it/s]Measuring inference for batch_size=256:  95%|█████████▌| 952/1000 [00:13<00:00, 71.24it/s]Measuring inference for batch_size=256:  96%|█████████▌| 960/1000 [00:13<00:00, 71.19it/s]Measuring inference for batch_size=256:  97%|█████████▋| 968/1000 [00:13<00:00, 71.21it/s]Measuring inference for batch_size=256:  98%|█████████▊| 976/1000 [00:13<00:00, 71.21it/s]Measuring inference for batch_size=256:  98%|█████████▊| 984/1000 [00:13<00:00, 71.24it/s]Measuring inference for batch_size=256:  99%|█████████▉| 992/1000 [00:13<00:00, 71.21it/s]Measuring inference for batch_size=256: 100%|██████████| 1000/1000 [00:14<00:00, 71.27it/s]Measuring inference for batch_size=256: 100%|██████████| 1000/1000 [00:14<00:00, 71.26it/s]
Unable to measure energy consumption. Device must be a NVIDIA Jetson.
device: cuda
flops: 11580687848
machine_info:
  cpu:
    architecture: x86_64
    cores:
      physical: 12
      total: 24
    frequency: 3.80 GHz
    model: AMD Ryzen 9 3900X 12-Core Processor
  gpus:
  - memory: 12288.0 MB
    name: NVIDIA GeForce RTX 3060
  memory:
    available: 27.53 GB
    total: 31.28 GB
    used: 3.28 GB
  system:
    node: baseline
    release: 6.5.0-9-generic
    system: Linux
memory:
  batch_size_1:
    max_inference: 374.76 MB
    max_inference_bytes: 392962560
    post_inference: 238.40 MB
    post_inference_bytes: 249983488
    pre_inference: 238.40 MB
    pre_inference_bytes: 249983488
  batch_size_256:
    max_inference: 378.48 MB
    max_inference_bytes: 396866048
    post_inference: 238.40 MB
    post_inference_bytes: 249983488
    pre_inference: 238.40 MB
    pre_inference_bytes: 249983488
params: 60192808
timing:
  batch_size_1:
    cpu_to_gpu:
      human_readable:
        batch_latency: 95.209 us +/- 5.315 us [92.745 us, 222.921 us]
        batches_per_second: 10.52 K +/- 403.94 [4.49 K, 10.78 K]
      metrics:
        batches_per_second_max: 10782.272493573264
        batches_per_second_mean: 10524.204098474725
        batches_per_second_min: 4485.886631016043
        batches_per_second_std: 403.9403018243789
        seconds_per_batch_max: 0.00022292137145996094
        seconds_per_batch_mean: 9.520912170410157e-05
        seconds_per_batch_min: 9.274482727050781e-05
        seconds_per_batch_std: 5.315029315666112e-06
    gpu_to_cpu:
      human_readable:
        batch_latency: 23.303 us +/- 0.739 us [22.411 us, 31.471 us]
        batches_per_second: 42.95 K +/- 1.16 K [31.78 K, 44.62 K]
      metrics:
        batches_per_second_max: 44620.255319148935
        batches_per_second_mean: 42949.22613295931
        batches_per_second_min: 31775.030303030304
        batches_per_second_std: 1164.9057717112821
        seconds_per_batch_max: 3.147125244140625e-05
        seconds_per_batch_mean: 2.330327033996582e-05
        seconds_per_batch_min: 2.2411346435546875e-05
        seconds_per_batch_std: 7.394020545591713e-07
    on_device_inference:
      human_readable:
        batch_latency: -13650852.865 us +/- 47.266 ms [-14453087.807 us, -13545951.843
          us]
        batches_per_second: -0.07 +/- 0.00 [-0.07, -0.07]
      metrics:
        batches_per_second_max: -0.06918936723931868
        batches_per_second_mean: -0.0732563605603358
        batches_per_second_min: -0.07382279308023959
        batches_per_second_std: 0.00024972463574232407
        seconds_per_batch_max: -13.545951843261719
        seconds_per_batch_mean: -13.650852865219116
        seconds_per_batch_min: -14.45308780670166
        seconds_per_batch_std: 0.04726551131385888
    total:
      human_readable:
        batch_latency: 13.777 ms +/- 50.308 us [13.669 ms, 14.725 ms]
        batches_per_second: 72.59 +/- 0.26 [67.91, 73.16]
      metrics:
        batches_per_second_max: 73.15689044703748
        batches_per_second_mean: 72.58558460696972
        batches_per_second_min: 67.91295336787564
        batches_per_second_std: 0.25917446986480214
        seconds_per_batch_max: 0.0147247314453125
        seconds_per_batch_mean: 0.013777019739151
        seconds_per_batch_min: 0.013669252395629883
        seconds_per_batch_std: 5.030760431176173e-05
  batch_size_256:
    cpu_to_gpu:
      human_readable:
        batch_latency: 147.734 us +/- 6.281 us [144.482 us, 277.519 us]
        batches_per_second: 6.78 K +/- 224.00 [3.60 K, 6.92 K]
      metrics:
        batches_per_second_max: 6921.293729372937
        batches_per_second_mean: 6778.138042380352
        batches_per_second_min: 3603.3539518900343
        batches_per_second_std: 223.99556273383809
        seconds_per_batch_max: 0.00027751922607421875
        seconds_per_batch_mean: 0.0001477341651916504
        seconds_per_batch_min: 0.00014448165893554688
        seconds_per_batch_std: 6.281041586950112e-06
    gpu_to_cpu:
      human_readable:
        batch_latency: 23.587 us +/- 0.610 us [22.650 us, 29.802 us]
        batches_per_second: 42.42 K +/- 978.27 [33.55 K, 44.15 K]
      metrics:
        batches_per_second_max: 44150.56842105263
        batches_per_second_mean: 42421.86638069145
        batches_per_second_min: 33554.432
        batches_per_second_std: 978.2697095070411
        seconds_per_batch_max: 2.9802322387695312e-05
        seconds_per_batch_mean: 2.358675003051758e-05
        seconds_per_batch_min: 2.2649765014648438e-05
        seconds_per_batch_std: 6.098624221479407e-07
    on_device_inference:
      human_readable:
        batch_latency: -13848163.741 us +/- 39.774 ms [-14420000.076 us, -13739295.959
          us]
        batches_per_second: -0.07 +/- 0.00 [-0.07, -0.07]
      metrics:
        batches_per_second_max: -0.06934812723364478
        batches_per_second_mean: -0.07221233120045689
        batches_per_second_min: -0.07278393324881707
        batches_per_second_std: 0.0002058549528813227
        seconds_per_batch_max: -13.739295959472656
        seconds_per_batch_mean: -13.848163741111755
        seconds_per_batch_min: -14.420000076293945
        seconds_per_batch_std: 0.03977427636605704
    total:
      human_readable:
        batch_latency: 14.025 ms +/- 42.520 us [13.913 ms, 14.732 ms]
        batches_per_second: 71.30 +/- 0.21 [67.88, 71.87]
      metrics:
        batches_per_second_max: 71.87319430402522
        batches_per_second_mean: 71.30195978220509
        batches_per_second_min: 67.87778353184878
        batches_per_second_std: 0.2134748716075847
        seconds_per_batch_max: 0.01473236083984375
        seconds_per_batch_mean: 0.01402498722076416
        seconds_per_batch_min: 0.013913393020629883
        seconds_per_batch_std: 4.252024371220043e-05


#####
baseline-baseline-py-id - Run 2
2024-02-23 10:06:44
#####
Benchmarking on 12 threads
Warming up with batch_size=1:   0%|          | 0/1 [00:00<?, ?it/s]Warming up with batch_size=1: 100%|██████████| 1/1 [00:00<00:00,  4.68it/s]Warming up with batch_size=1: 100%|██████████| 1/1 [00:00<00:00,  4.68it/s]
Warning: module Bottleneck is treated as a zero-op.
Warning: module ResNet is treated as a zero-op.
Warning! No positional inputs found for a module, assuming batch size is 1.
ResNet(
  60.19 M, 100.000% Params, 11.58 GMac, 100.000% MACs, 
  (conv1): Conv2d(9.41 k, 0.016% Params, 118.01 MMac, 1.019% MACs, 3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(128, 0.000% Params, 1.61 MMac, 0.014% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(0, 0.000% Params, 802.82 KMac, 0.007% MACs, inplace=True)
  (maxpool): MaxPool2d(0, 0.000% Params, 802.82 KMac, 0.007% MACs, kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    215.81 k, 0.359% Params, 680.39 MMac, 5.875% MACs, 
    (0): Bottleneck(
      75.01 k, 0.125% Params, 236.43 MMac, 2.042% MACs, 
      (conv1): Conv2d(4.1 k, 0.007% Params, 12.85 MMac, 0.111% MACs, 64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
      (downsample): Sequential(
        16.9 k, 0.028% Params, 52.99 MMac, 0.458% MACs, 
        (0): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      70.4 k, 0.117% Params, 221.98 MMac, 1.917% MACs, 
      (conv1): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
    )
    (2): Bottleneck(
      70.4 k, 0.117% Params, 221.98 MMac, 1.917% MACs, 
      (conv1): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
    )
  )
  (layer2): Sequential(
    2.34 M, 3.887% Params, 1.92 GMac, 16.555% MACs, 
    (0): Bottleneck(
      379.39 k, 0.630% Params, 376.02 MMac, 3.247% MACs, 
      (conv1): Conv2d(32.77 k, 0.054% Params, 102.76 MMac, 0.887% MACs, 256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 802.82 KMac, 0.007% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 903.17 KMac, 0.008% MACs, inplace=True)
      (downsample): Sequential(
        132.1 k, 0.219% Params, 103.56 MMac, 0.894% MACs, 
        (0): Conv2d(131.07 k, 0.218% Params, 102.76 MMac, 0.887% MACs, 256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (2): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (3): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (4): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (5): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (6): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (7): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
  )
  (layer3): Sequential(
    40.61 M, 67.473% Params, 8.05 GMac, 69.501% MACs, 
    (0): Bottleneck(
      1.51 M, 2.513% Params, 374.26 MMac, 3.232% MACs, 
      (conv1): Conv2d(131.07 k, 0.218% Params, 102.76 MMac, 0.887% MACs, 512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 401.41 KMac, 0.003% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 451.58 KMac, 0.004% MACs, inplace=True)
      (downsample): Sequential(
        526.34 k, 0.874% Params, 103.16 MMac, 0.891% MACs, 
        (0): Conv2d(524.29 k, 0.871% Params, 102.76 MMac, 0.887% MACs, 512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (2): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (3): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (4): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (5): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (6): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (7): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (8): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (9): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (10): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (11): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (12): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (13): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (14): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (15): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (16): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (17): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (18): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (19): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (20): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (21): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (22): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (23): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (24): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (25): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (26): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (27): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (28): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (29): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (30): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (31): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (32): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (33): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (34): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (35): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
  )
  (layer4): Sequential(
    14.96 M, 24.861% Params, 811.02 MMac, 7.003% MACs, 
    (0): Bottleneck(
      6.04 M, 10.034% Params, 373.38 MMac, 3.224% MACs, 
      (conv1): Conv2d(524.29 k, 0.871% Params, 102.76 MMac, 0.887% MACs, 1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 200.7 KMac, 0.002% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 225.79 KMac, 0.002% MACs, inplace=True)
      (downsample): Sequential(
        2.1 M, 3.491% Params, 102.96 MMac, 0.889% MACs, 
        (0): Conv2d(2.1 M, 3.484% Params, 102.76 MMac, 0.887% MACs, 1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      4.46 M, 7.414% Params, 218.82 MMac, 1.890% MACs, 
      (conv1): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 150.53 KMac, 0.001% MACs, inplace=True)
    )
    (2): Bottleneck(
      4.46 M, 7.414% Params, 218.82 MMac, 1.890% MACs, 
      (conv1): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 150.53 KMac, 0.001% MACs, inplace=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(0, 0.000% Params, 100.35 KMac, 0.001% MACs, output_size=(1, 1))
  (fc): Linear(2.05 M, 3.404% Params, 2.05 MMac, 0.018% MACs, in_features=2048, out_features=1000, bias=True)
)
Warming up with batch_size=1:   0%|          | 0/100 [00:00<?, ?it/s]Warming up with batch_size=1:  10%|█         | 10/100 [00:00<00:00, 96.69it/s]Warming up with batch_size=1:  20%|██        | 20/100 [00:00<00:00, 97.01it/s]Warming up with batch_size=1:  30%|███       | 30/100 [00:00<00:00, 97.25it/s]Warming up with batch_size=1:  40%|████      | 40/100 [00:00<00:00, 97.32it/s]Warming up with batch_size=1:  50%|█████     | 50/100 [00:00<00:00, 97.40it/s]Warming up with batch_size=1:  60%|██████    | 60/100 [00:00<00:00, 97.45it/s]Warming up with batch_size=1:  70%|███████   | 70/100 [00:00<00:00, 97.40it/s]Warming up with batch_size=1:  80%|████████  | 80/100 [00:00<00:00, 97.41it/s]Warming up with batch_size=1:  90%|█████████ | 90/100 [00:00<00:00, 97.40it/s]Warming up with batch_size=1: 100%|██████████| 100/100 [00:01<00:00, 97.36it/s]Warming up with batch_size=1: 100%|██████████| 100/100 [00:01<00:00, 97.33it/s]
STAGE:2024-02-23 10:06:12 177915:177915 ActivityProfilerController.cpp:312] Completed Stage: Warm Up
STAGE:2024-02-23 10:06:12 177915:177915 ActivityProfilerController.cpp:318] Completed Stage: Collection
STAGE:2024-02-23 10:06:12 177915:177915 ActivityProfilerController.cpp:322] Completed Stage: Post Processing
Measuring inference for batch_size=1:   0%|          | 0/1000 [00:00<?, ?it/s]Measuring inference for batch_size=1:   1%|          | 8/1000 [00:00<00:13, 72.59it/s]Measuring inference for batch_size=1:   2%|▏         | 16/1000 [00:00<00:13, 72.99it/s]Measuring inference for batch_size=1:   2%|▏         | 24/1000 [00:00<00:13, 73.07it/s]Measuring inference for batch_size=1:   3%|▎         | 32/1000 [00:00<00:13, 73.09it/s]Measuring inference for batch_size=1:   4%|▍         | 40/1000 [00:00<00:13, 73.08it/s]Measuring inference for batch_size=1:   5%|▍         | 48/1000 [00:00<00:13, 73.08it/s]Measuring inference for batch_size=1:   6%|▌         | 56/1000 [00:00<00:12, 73.07it/s]Measuring inference for batch_size=1:   6%|▋         | 64/1000 [00:00<00:12, 73.09it/s]Measuring inference for batch_size=1:   7%|▋         | 72/1000 [00:00<00:12, 73.06it/s]Measuring inference for batch_size=1:   8%|▊         | 80/1000 [00:01<00:12, 73.06it/s]Measuring inference for batch_size=1:   9%|▉         | 88/1000 [00:01<00:12, 73.06it/s]Measuring inference for batch_size=1:  10%|▉         | 96/1000 [00:01<00:12, 73.05it/s]Measuring inference for batch_size=1:  10%|█         | 104/1000 [00:01<00:12, 73.07it/s]Measuring inference for batch_size=1:  11%|█         | 112/1000 [00:01<00:12, 73.08it/s]Measuring inference for batch_size=1:  12%|█▏        | 120/1000 [00:01<00:12, 73.07it/s]Measuring inference for batch_size=1:  13%|█▎        | 128/1000 [00:01<00:11, 73.08it/s]Measuring inference for batch_size=1:  14%|█▎        | 136/1000 [00:01<00:11, 73.11it/s]Measuring inference for batch_size=1:  14%|█▍        | 144/1000 [00:01<00:11, 73.12it/s]Measuring inference for batch_size=1:  15%|█▌        | 152/1000 [00:02<00:11, 73.15it/s]Measuring inference for batch_size=1:  16%|█▌        | 160/1000 [00:02<00:11, 73.20it/s]Measuring inference for batch_size=1:  17%|█▋        | 168/1000 [00:02<00:11, 73.18it/s]Measuring inference for batch_size=1:  18%|█▊        | 176/1000 [00:02<00:11, 73.17it/s]Measuring inference for batch_size=1:  18%|█▊        | 184/1000 [00:02<00:11, 73.18it/s]Measuring inference for batch_size=1:  19%|█▉        | 192/1000 [00:02<00:11, 73.20it/s]Measuring inference for batch_size=1:  20%|██        | 200/1000 [00:02<00:10, 73.21it/s]Measuring inference for batch_size=1:  21%|██        | 208/1000 [00:02<00:10, 73.21it/s]Measuring inference for batch_size=1:  22%|██▏       | 216/1000 [00:02<00:10, 73.24it/s]Measuring inference for batch_size=1:  22%|██▏       | 224/1000 [00:03<00:10, 73.21it/s]Measuring inference for batch_size=1:  23%|██▎       | 232/1000 [00:03<00:10, 73.20it/s]Measuring inference for batch_size=1:  24%|██▍       | 240/1000 [00:03<00:10, 73.16it/s]Measuring inference for batch_size=1:  25%|██▍       | 248/1000 [00:03<00:10, 73.17it/s]Measuring inference for batch_size=1:  26%|██▌       | 256/1000 [00:03<00:10, 73.20it/s]Measuring inference for batch_size=1:  26%|██▋       | 264/1000 [00:03<00:10, 73.20it/s]Measuring inference for batch_size=1:  27%|██▋       | 272/1000 [00:03<00:09, 73.17it/s]Measuring inference for batch_size=1:  28%|██▊       | 280/1000 [00:03<00:09, 73.17it/s]Measuring inference for batch_size=1:  29%|██▉       | 288/1000 [00:03<00:09, 73.17it/s]Measuring inference for batch_size=1:  30%|██▉       | 296/1000 [00:04<00:09, 73.18it/s]Measuring inference for batch_size=1:  30%|███       | 304/1000 [00:04<00:09, 73.17it/s]Measuring inference for batch_size=1:  31%|███       | 312/1000 [00:04<00:09, 73.14it/s]Measuring inference for batch_size=1:  32%|███▏      | 320/1000 [00:04<00:09, 73.07it/s]Measuring inference for batch_size=1:  33%|███▎      | 328/1000 [00:04<00:09, 73.03it/s]Measuring inference for batch_size=1:  34%|███▎      | 336/1000 [00:04<00:09, 73.03it/s]Measuring inference for batch_size=1:  34%|███▍      | 344/1000 [00:04<00:08, 73.04it/s]Measuring inference for batch_size=1:  35%|███▌      | 352/1000 [00:04<00:08, 73.03it/s]Measuring inference for batch_size=1:  36%|███▌      | 360/1000 [00:04<00:08, 73.04it/s]Measuring inference for batch_size=1:  37%|███▋      | 368/1000 [00:05<00:08, 73.07it/s]Measuring inference for batch_size=1:  38%|███▊      | 376/1000 [00:05<00:08, 73.05it/s]Measuring inference for batch_size=1:  38%|███▊      | 384/1000 [00:05<00:08, 73.04it/s]Measuring inference for batch_size=1:  39%|███▉      | 392/1000 [00:05<00:08, 73.00it/s]Measuring inference for batch_size=1:  40%|████      | 400/1000 [00:05<00:08, 72.97it/s]Measuring inference for batch_size=1:  41%|████      | 408/1000 [00:05<00:08, 73.01it/s]Measuring inference for batch_size=1:  42%|████▏     | 416/1000 [00:05<00:07, 73.03it/s]Measuring inference for batch_size=1:  42%|████▏     | 424/1000 [00:05<00:07, 73.05it/s]Measuring inference for batch_size=1:  43%|████▎     | 432/1000 [00:05<00:07, 73.07it/s]Measuring inference for batch_size=1:  44%|████▍     | 440/1000 [00:06<00:07, 73.06it/s]Measuring inference for batch_size=1:  45%|████▍     | 448/1000 [00:06<00:07, 73.09it/s]Measuring inference for batch_size=1:  46%|████▌     | 456/1000 [00:06<00:07, 73.09it/s]Measuring inference for batch_size=1:  46%|████▋     | 464/1000 [00:06<00:07, 73.11it/s]Measuring inference for batch_size=1:  47%|████▋     | 472/1000 [00:06<00:07, 73.11it/s]Measuring inference for batch_size=1:  48%|████▊     | 480/1000 [00:06<00:07, 73.14it/s]Measuring inference for batch_size=1:  49%|████▉     | 488/1000 [00:06<00:06, 73.16it/s]Measuring inference for batch_size=1:  50%|████▉     | 496/1000 [00:06<00:06, 73.19it/s]Measuring inference for batch_size=1:  50%|█████     | 504/1000 [00:06<00:06, 73.25it/s]Measuring inference for batch_size=1:  51%|█████     | 512/1000 [00:07<00:06, 73.29it/s]Measuring inference for batch_size=1:  52%|█████▏    | 520/1000 [00:07<00:06, 73.33it/s]Measuring inference for batch_size=1:  53%|█████▎    | 528/1000 [00:07<00:06, 73.36it/s]Measuring inference for batch_size=1:  54%|█████▎    | 536/1000 [00:07<00:06, 73.31it/s]Measuring inference for batch_size=1:  54%|█████▍    | 544/1000 [00:07<00:06, 73.28it/s]Measuring inference for batch_size=1:  55%|█████▌    | 552/1000 [00:07<00:06, 73.24it/s]Measuring inference for batch_size=1:  56%|█████▌    | 560/1000 [00:07<00:06, 73.26it/s]Measuring inference for batch_size=1:  57%|█████▋    | 568/1000 [00:07<00:05, 73.31it/s]Measuring inference for batch_size=1:  58%|█████▊    | 576/1000 [00:07<00:05, 73.34it/s]Measuring inference for batch_size=1:  58%|█████▊    | 584/1000 [00:07<00:05, 73.34it/s]Measuring inference for batch_size=1:  59%|█████▉    | 592/1000 [00:08<00:05, 73.36it/s]Measuring inference for batch_size=1:  60%|██████    | 600/1000 [00:08<00:05, 73.36it/s]Measuring inference for batch_size=1:  61%|██████    | 608/1000 [00:08<00:05, 73.31it/s]Measuring inference for batch_size=1:  62%|██████▏   | 616/1000 [00:08<00:05, 73.27it/s]Measuring inference for batch_size=1:  62%|██████▏   | 624/1000 [00:08<00:05, 73.21it/s]Measuring inference for batch_size=1:  63%|██████▎   | 632/1000 [00:08<00:05, 73.28it/s]Measuring inference for batch_size=1:  64%|██████▍   | 640/1000 [00:08<00:04, 73.29it/s]Measuring inference for batch_size=1:  65%|██████▍   | 648/1000 [00:08<00:04, 73.27it/s]Measuring inference for batch_size=1:  66%|██████▌   | 656/1000 [00:08<00:04, 73.30it/s]Measuring inference for batch_size=1:  66%|██████▋   | 664/1000 [00:09<00:04, 73.33it/s]Measuring inference for batch_size=1:  67%|██████▋   | 672/1000 [00:09<00:04, 73.32it/s]Measuring inference for batch_size=1:  68%|██████▊   | 680/1000 [00:09<00:04, 73.27it/s]Measuring inference for batch_size=1:  69%|██████▉   | 688/1000 [00:09<00:04, 73.25it/s]Measuring inference for batch_size=1:  70%|██████▉   | 696/1000 [00:09<00:04, 73.20it/s]Measuring inference for batch_size=1:  70%|███████   | 704/1000 [00:09<00:04, 73.20it/s]Measuring inference for batch_size=1:  71%|███████   | 712/1000 [00:09<00:03, 73.20it/s]Measuring inference for batch_size=1:  72%|███████▏  | 720/1000 [00:09<00:03, 73.21it/s]Measuring inference for batch_size=1:  73%|███████▎  | 728/1000 [00:09<00:03, 73.21it/s]Measuring inference for batch_size=1:  74%|███████▎  | 736/1000 [00:10<00:03, 73.21it/s]Measuring inference for batch_size=1:  74%|███████▍  | 744/1000 [00:10<00:03, 73.18it/s]Measuring inference for batch_size=1:  75%|███████▌  | 752/1000 [00:10<00:03, 73.15it/s]Measuring inference for batch_size=1:  76%|███████▌  | 760/1000 [00:10<00:03, 73.15it/s]Measuring inference for batch_size=1:  77%|███████▋  | 768/1000 [00:10<00:03, 73.16it/s]Measuring inference for batch_size=1:  78%|███████▊  | 776/1000 [00:10<00:03, 73.23it/s]Measuring inference for batch_size=1:  78%|███████▊  | 784/1000 [00:10<00:02, 73.27it/s]Measuring inference for batch_size=1:  79%|███████▉  | 792/1000 [00:10<00:02, 73.33it/s]Measuring inference for batch_size=1:  80%|████████  | 800/1000 [00:10<00:02, 73.37it/s]Measuring inference for batch_size=1:  81%|████████  | 808/1000 [00:11<00:02, 73.42it/s]Measuring inference for batch_size=1:  82%|████████▏ | 816/1000 [00:11<00:02, 73.43it/s]Measuring inference for batch_size=1:  82%|████████▏ | 824/1000 [00:11<00:02, 73.43it/s]Measuring inference for batch_size=1:  83%|████████▎ | 832/1000 [00:11<00:02, 73.38it/s]Measuring inference for batch_size=1:  84%|████████▍ | 840/1000 [00:11<00:02, 73.35it/s]Measuring inference for batch_size=1:  85%|████████▍ | 848/1000 [00:11<00:02, 73.34it/s]Measuring inference for batch_size=1:  86%|████████▌ | 856/1000 [00:11<00:01, 73.30it/s]Measuring inference for batch_size=1:  86%|████████▋ | 864/1000 [00:11<00:01, 73.30it/s]Measuring inference for batch_size=1:  87%|████████▋ | 872/1000 [00:11<00:01, 73.31it/s]Measuring inference for batch_size=1:  88%|████████▊ | 880/1000 [00:12<00:01, 73.28it/s]Measuring inference for batch_size=1:  89%|████████▉ | 888/1000 [00:12<00:01, 73.27it/s]Measuring inference for batch_size=1:  90%|████████▉ | 896/1000 [00:12<00:01, 73.28it/s]Measuring inference for batch_size=1:  90%|█████████ | 904/1000 [00:12<00:01, 73.28it/s]Measuring inference for batch_size=1:  91%|█████████ | 912/1000 [00:12<00:01, 73.28it/s]Measuring inference for batch_size=1:  92%|█████████▏| 920/1000 [00:12<00:01, 73.32it/s]Measuring inference for batch_size=1:  93%|█████████▎| 928/1000 [00:12<00:00, 73.33it/s]Measuring inference for batch_size=1:  94%|█████████▎| 936/1000 [00:12<00:00, 73.33it/s]Measuring inference for batch_size=1:  94%|█████████▍| 944/1000 [00:12<00:00, 73.34it/s]Measuring inference for batch_size=1:  95%|█████████▌| 952/1000 [00:13<00:00, 73.33it/s]Measuring inference for batch_size=1:  96%|█████████▌| 960/1000 [00:13<00:00, 73.32it/s]Measuring inference for batch_size=1:  97%|█████████▋| 968/1000 [00:13<00:00, 73.30it/s]Measuring inference for batch_size=1:  98%|█████████▊| 976/1000 [00:13<00:00, 73.27it/s]Measuring inference for batch_size=1:  98%|█████████▊| 984/1000 [00:13<00:00, 73.28it/s]Measuring inference for batch_size=1:  99%|█████████▉| 992/1000 [00:13<00:00, 73.28it/s]Measuring inference for batch_size=1: 100%|██████████| 1000/1000 [00:13<00:00, 73.31it/s]Measuring inference for batch_size=1: 100%|██████████| 1000/1000 [00:13<00:00, 73.20it/s]
Unable to measure energy consumption. Device must be a NVIDIA Jetson.
Warming up with batch_size=256:   0%|          | 0/100 [00:00<?, ?it/s]Warming up with batch_size=256:   8%|▊         | 8/100 [00:00<00:01, 72.49it/s]Warming up with batch_size=256:  16%|█▌        | 16/100 [00:00<00:01, 72.52it/s]Warming up with batch_size=256:  24%|██▍       | 24/100 [00:00<00:01, 72.59it/s]Warming up with batch_size=256:  32%|███▏      | 32/100 [00:00<00:00, 72.66it/s]Warming up with batch_size=256:  40%|████      | 40/100 [00:00<00:00, 72.62it/s]Warming up with batch_size=256:  48%|████▊     | 48/100 [00:00<00:00, 72.64it/s]Warming up with batch_size=256:  56%|█████▌    | 56/100 [00:00<00:00, 72.64it/s]Warming up with batch_size=256:  64%|██████▍   | 64/100 [00:00<00:00, 72.64it/s]Warming up with batch_size=256:  72%|███████▏  | 72/100 [00:00<00:00, 72.63it/s]Warming up with batch_size=256:  80%|████████  | 80/100 [00:01<00:00, 72.63it/s]Warming up with batch_size=256:  88%|████████▊ | 88/100 [00:01<00:00, 72.70it/s]Warming up with batch_size=256:  96%|█████████▌| 96/100 [00:01<00:00, 72.72it/s]Warming up with batch_size=256: 100%|██████████| 100/100 [00:01<00:00, 72.66it/s]
STAGE:2024-02-23 10:06:28 177915:177915 ActivityProfilerController.cpp:312] Completed Stage: Warm Up
STAGE:2024-02-23 10:06:28 177915:177915 ActivityProfilerController.cpp:318] Completed Stage: Collection
STAGE:2024-02-23 10:06:28 177915:177915 ActivityProfilerController.cpp:322] Completed Stage: Post Processing
Measuring inference for batch_size=256:   0%|          | 0/1000 [00:00<?, ?it/s]Measuring inference for batch_size=256:   1%|          | 8/1000 [00:00<00:13, 71.49it/s]Measuring inference for batch_size=256:   2%|▏         | 16/1000 [00:00<00:13, 71.66it/s]Measuring inference for batch_size=256:   2%|▏         | 24/1000 [00:00<00:13, 71.78it/s]Measuring inference for batch_size=256:   3%|▎         | 32/1000 [00:00<00:13, 71.86it/s]Measuring inference for batch_size=256:   4%|▍         | 40/1000 [00:00<00:13, 71.95it/s]Measuring inference for batch_size=256:   5%|▍         | 48/1000 [00:00<00:13, 71.99it/s]Measuring inference for batch_size=256:   6%|▌         | 56/1000 [00:00<00:13, 72.02it/s]Measuring inference for batch_size=256:   6%|▋         | 64/1000 [00:00<00:12, 72.03it/s]Measuring inference for batch_size=256:   7%|▋         | 72/1000 [00:01<00:12, 72.05it/s]Measuring inference for batch_size=256:   8%|▊         | 80/1000 [00:01<00:12, 72.05it/s]Measuring inference for batch_size=256:   9%|▉         | 88/1000 [00:01<00:12, 72.05it/s]Measuring inference for batch_size=256:  10%|▉         | 96/1000 [00:01<00:12, 72.08it/s]Measuring inference for batch_size=256:  10%|█         | 104/1000 [00:01<00:12, 72.09it/s]Measuring inference for batch_size=256:  11%|█         | 112/1000 [00:01<00:12, 72.14it/s]Measuring inference for batch_size=256:  12%|█▏        | 120/1000 [00:01<00:12, 72.12it/s]Measuring inference for batch_size=256:  13%|█▎        | 128/1000 [00:01<00:12, 72.09it/s]Measuring inference for batch_size=256:  14%|█▎        | 136/1000 [00:01<00:11, 72.08it/s]Measuring inference for batch_size=256:  14%|█▍        | 144/1000 [00:01<00:11, 72.05it/s]Measuring inference for batch_size=256:  15%|█▌        | 152/1000 [00:02<00:11, 72.04it/s]Measuring inference for batch_size=256:  16%|█▌        | 160/1000 [00:02<00:11, 72.06it/s]Measuring inference for batch_size=256:  17%|█▋        | 168/1000 [00:02<00:11, 72.08it/s]Measuring inference for batch_size=256:  18%|█▊        | 176/1000 [00:02<00:11, 72.08it/s]Measuring inference for batch_size=256:  18%|█▊        | 184/1000 [00:02<00:11, 72.08it/s]Measuring inference for batch_size=256:  19%|█▉        | 192/1000 [00:02<00:11, 72.07it/s]Measuring inference for batch_size=256:  20%|██        | 200/1000 [00:02<00:11, 72.05it/s]Measuring inference for batch_size=256:  21%|██        | 208/1000 [00:02<00:10, 72.05it/s]Measuring inference for batch_size=256:  22%|██▏       | 216/1000 [00:02<00:10, 72.04it/s]Measuring inference for batch_size=256:  22%|██▏       | 224/1000 [00:03<00:10, 72.04it/s]Measuring inference for batch_size=256:  23%|██▎       | 232/1000 [00:03<00:10, 72.05it/s]Measuring inference for batch_size=256:  24%|██▍       | 240/1000 [00:03<00:10, 72.11it/s]Measuring inference for batch_size=256:  25%|██▍       | 248/1000 [00:03<00:10, 72.12it/s]Measuring inference for batch_size=256:  26%|██▌       | 256/1000 [00:03<00:10, 72.16it/s]Measuring inference for batch_size=256:  26%|██▋       | 264/1000 [00:03<00:10, 72.20it/s]Measuring inference for batch_size=256:  27%|██▋       | 272/1000 [00:03<00:10, 72.20it/s]Measuring inference for batch_size=256:  28%|██▊       | 280/1000 [00:03<00:09, 72.22it/s]Measuring inference for batch_size=256:  29%|██▉       | 288/1000 [00:03<00:09, 72.17it/s]Measuring inference for batch_size=256:  30%|██▉       | 296/1000 [00:04<00:09, 72.14it/s]Measuring inference for batch_size=256:  30%|███       | 304/1000 [00:04<00:09, 72.14it/s]Measuring inference for batch_size=256:  31%|███       | 312/1000 [00:04<00:09, 72.13it/s]Measuring inference for batch_size=256:  32%|███▏      | 320/1000 [00:04<00:09, 72.13it/s]Measuring inference for batch_size=256:  33%|███▎      | 328/1000 [00:04<00:09, 72.21it/s]Measuring inference for batch_size=256:  34%|███▎      | 336/1000 [00:04<00:09, 72.22it/s]Measuring inference for batch_size=256:  34%|███▍      | 344/1000 [00:04<00:09, 72.22it/s]Measuring inference for batch_size=256:  35%|███▌      | 352/1000 [00:04<00:08, 72.23it/s]Measuring inference for batch_size=256:  36%|███▌      | 360/1000 [00:04<00:08, 72.17it/s]Measuring inference for batch_size=256:  37%|███▋      | 368/1000 [00:05<00:08, 72.14it/s]Measuring inference for batch_size=256:  38%|███▊      | 376/1000 [00:05<00:08, 72.14it/s]Measuring inference for batch_size=256:  38%|███▊      | 384/1000 [00:05<00:08, 72.19it/s]Measuring inference for batch_size=256:  39%|███▉      | 392/1000 [00:05<00:08, 72.22it/s]Measuring inference for batch_size=256:  40%|████      | 400/1000 [00:05<00:08, 72.27it/s]Measuring inference for batch_size=256:  41%|████      | 408/1000 [00:05<00:08, 72.29it/s]Measuring inference for batch_size=256:  42%|████▏     | 416/1000 [00:05<00:08, 72.28it/s]Measuring inference for batch_size=256:  42%|████▏     | 424/1000 [00:05<00:07, 72.24it/s]Measuring inference for batch_size=256:  43%|████▎     | 432/1000 [00:05<00:07, 72.16it/s]Measuring inference for batch_size=256:  44%|████▍     | 440/1000 [00:06<00:07, 72.11it/s]Measuring inference for batch_size=256:  45%|████▍     | 448/1000 [00:06<00:07, 72.08it/s]Measuring inference for batch_size=256:  46%|████▌     | 456/1000 [00:06<00:07, 72.07it/s]Measuring inference for batch_size=256:  46%|████▋     | 464/1000 [00:06<00:07, 72.07it/s]Measuring inference for batch_size=256:  47%|████▋     | 472/1000 [00:06<00:07, 72.09it/s]Measuring inference for batch_size=256:  48%|████▊     | 480/1000 [00:06<00:07, 72.10it/s]Measuring inference for batch_size=256:  49%|████▉     | 488/1000 [00:06<00:07, 72.14it/s]Measuring inference for batch_size=256:  50%|████▉     | 496/1000 [00:06<00:06, 72.13it/s]Measuring inference for batch_size=256:  50%|█████     | 504/1000 [00:06<00:06, 72.17it/s]Measuring inference for batch_size=256:  51%|█████     | 512/1000 [00:07<00:06, 72.16it/s]Measuring inference for batch_size=256:  52%|█████▏    | 520/1000 [00:07<00:06, 72.13it/s]Measuring inference for batch_size=256:  53%|█████▎    | 528/1000 [00:07<00:06, 72.15it/s]Measuring inference for batch_size=256:  54%|█████▎    | 536/1000 [00:07<00:06, 72.13it/s]Measuring inference for batch_size=256:  54%|█████▍    | 544/1000 [00:07<00:06, 72.13it/s]Measuring inference for batch_size=256:  55%|█████▌    | 552/1000 [00:07<00:06, 72.12it/s]Measuring inference for batch_size=256:  56%|█████▌    | 560/1000 [00:07<00:06, 72.14it/s]Measuring inference for batch_size=256:  57%|█████▋    | 568/1000 [00:07<00:05, 72.13it/s]Measuring inference for batch_size=256:  58%|█████▊    | 576/1000 [00:07<00:05, 72.11it/s]Measuring inference for batch_size=256:  58%|█████▊    | 584/1000 [00:08<00:05, 72.08it/s]Measuring inference for batch_size=256:  59%|█████▉    | 592/1000 [00:08<00:05, 72.07it/s]Measuring inference for batch_size=256:  60%|██████    | 600/1000 [00:08<00:05, 72.06it/s]Measuring inference for batch_size=256:  61%|██████    | 608/1000 [00:08<00:05, 72.06it/s]Measuring inference for batch_size=256:  62%|██████▏   | 616/1000 [00:08<00:05, 72.07it/s]Measuring inference for batch_size=256:  62%|██████▏   | 624/1000 [00:08<00:05, 72.07it/s]Measuring inference for batch_size=256:  63%|██████▎   | 632/1000 [00:08<00:05, 72.04it/s]Measuring inference for batch_size=256:  64%|██████▍   | 640/1000 [00:08<00:04, 72.06it/s]Measuring inference for batch_size=256:  65%|██████▍   | 648/1000 [00:08<00:04, 72.05it/s]Measuring inference for batch_size=256:  66%|██████▌   | 656/1000 [00:09<00:04, 72.07it/s]Measuring inference for batch_size=256:  66%|██████▋   | 664/1000 [00:09<00:04, 72.10it/s]Measuring inference for batch_size=256:  67%|██████▋   | 672/1000 [00:09<00:04, 72.12it/s]Measuring inference for batch_size=256:  68%|██████▊   | 680/1000 [00:09<00:04, 72.13it/s]Measuring inference for batch_size=256:  69%|██████▉   | 688/1000 [00:09<00:04, 72.15it/s]Measuring inference for batch_size=256:  70%|██████▉   | 696/1000 [00:09<00:04, 72.16it/s]Measuring inference for batch_size=256:  70%|███████   | 704/1000 [00:09<00:04, 72.14it/s]Measuring inference for batch_size=256:  71%|███████   | 712/1000 [00:09<00:03, 72.15it/s]Measuring inference for batch_size=256:  72%|███████▏  | 720/1000 [00:09<00:03, 72.16it/s]Measuring inference for batch_size=256:  73%|███████▎  | 728/1000 [00:10<00:03, 72.14it/s]Measuring inference for batch_size=256:  74%|███████▎  | 736/1000 [00:10<00:03, 72.12it/s]Measuring inference for batch_size=256:  74%|███████▍  | 744/1000 [00:10<00:03, 72.11it/s]Measuring inference for batch_size=256:  75%|███████▌  | 752/1000 [00:10<00:03, 72.11it/s]Measuring inference for batch_size=256:  76%|███████▌  | 760/1000 [00:10<00:03, 72.12it/s]Measuring inference for batch_size=256:  77%|███████▋  | 768/1000 [00:10<00:03, 72.15it/s]Measuring inference for batch_size=256:  78%|███████▊  | 776/1000 [00:10<00:03, 72.14it/s]Measuring inference for batch_size=256:  78%|███████▊  | 784/1000 [00:10<00:02, 72.14it/s]Measuring inference for batch_size=256:  79%|███████▉  | 792/1000 [00:10<00:02, 72.11it/s]Measuring inference for batch_size=256:  80%|████████  | 800/1000 [00:11<00:02, 72.11it/s]Measuring inference for batch_size=256:  81%|████████  | 808/1000 [00:11<00:02, 72.12it/s]Measuring inference for batch_size=256:  82%|████████▏ | 816/1000 [00:11<00:02, 72.12it/s]Measuring inference for batch_size=256:  82%|████████▏ | 824/1000 [00:11<00:02, 72.12it/s]Measuring inference for batch_size=256:  83%|████████▎ | 832/1000 [00:11<00:02, 72.12it/s]Measuring inference for batch_size=256:  84%|████████▍ | 840/1000 [00:11<00:02, 72.11it/s]Measuring inference for batch_size=256:  85%|████████▍ | 848/1000 [00:11<00:02, 72.12it/s]Measuring inference for batch_size=256:  86%|████████▌ | 856/1000 [00:11<00:01, 72.11it/s]Measuring inference for batch_size=256:  86%|████████▋ | 864/1000 [00:11<00:01, 72.09it/s]Measuring inference for batch_size=256:  87%|████████▋ | 872/1000 [00:12<00:01, 72.05it/s]Measuring inference for batch_size=256:  88%|████████▊ | 880/1000 [00:12<00:01, 72.02it/s]Measuring inference for batch_size=256:  89%|████████▉ | 888/1000 [00:12<00:01, 72.01it/s]Measuring inference for batch_size=256:  90%|████████▉ | 896/1000 [00:12<00:01, 71.99it/s]Measuring inference for batch_size=256:  90%|█████████ | 904/1000 [00:12<00:01, 72.02it/s]Measuring inference for batch_size=256:  91%|█████████ | 912/1000 [00:12<00:01, 72.06it/s]Measuring inference for batch_size=256:  92%|█████████▏| 920/1000 [00:12<00:01, 72.10it/s]Measuring inference for batch_size=256:  93%|█████████▎| 928/1000 [00:12<00:00, 72.08it/s]Measuring inference for batch_size=256:  94%|█████████▎| 936/1000 [00:12<00:00, 72.12it/s]Measuring inference for batch_size=256:  94%|█████████▍| 944/1000 [00:13<00:00, 72.14it/s]Measuring inference for batch_size=256:  95%|█████████▌| 952/1000 [00:13<00:00, 72.12it/s]Measuring inference for batch_size=256:  96%|█████████▌| 960/1000 [00:13<00:00, 72.12it/s]Measuring inference for batch_size=256:  97%|█████████▋| 968/1000 [00:13<00:00, 72.10it/s]Measuring inference for batch_size=256:  98%|█████████▊| 976/1000 [00:13<00:00, 72.11it/s]Measuring inference for batch_size=256:  98%|█████████▊| 984/1000 [00:13<00:00, 72.09it/s]Measuring inference for batch_size=256:  99%|█████████▉| 992/1000 [00:13<00:00, 72.08it/s]Measuring inference for batch_size=256: 100%|██████████| 1000/1000 [00:13<00:00, 72.05it/s]Measuring inference for batch_size=256: 100%|██████████| 1000/1000 [00:13<00:00, 72.10it/s]
Unable to measure energy consumption. Device must be a NVIDIA Jetson.
device: cuda
flops: 11580687848
machine_info:
  cpu:
    architecture: x86_64
    cores:
      physical: 12
      total: 24
    frequency: 3.80 GHz
    model: AMD Ryzen 9 3900X 12-Core Processor
  gpus:
  - memory: 12288.0 MB
    name: NVIDIA GeForce RTX 3060
  memory:
    available: 27.53 GB
    total: 31.28 GB
    used: 3.29 GB
  system:
    node: baseline
    release: 6.5.0-9-generic
    system: Linux
memory:
  batch_size_1:
    max_inference: 374.76 MB
    max_inference_bytes: 392962560
    post_inference: 238.40 MB
    post_inference_bytes: 249983488
    pre_inference: 238.40 MB
    pre_inference_bytes: 249983488
  batch_size_256:
    max_inference: 378.48 MB
    max_inference_bytes: 396866048
    post_inference: 238.40 MB
    post_inference_bytes: 249983488
    pre_inference: 238.40 MB
    pre_inference_bytes: 249983488
params: 60192808
timing:
  batch_size_1:
    cpu_to_gpu:
      human_readable:
        batch_latency: 93.530 us +/- 5.200 us [91.076 us, 218.391 us]
        batches_per_second: 10.71 K +/- 408.71 [4.58 K, 10.98 K]
      metrics:
        batches_per_second_max: 10979.853403141362
        batches_per_second_mean: 10712.954899744653
        batches_per_second_min: 4578.934497816594
        batches_per_second_std: 408.70617120278763
        seconds_per_batch_max: 0.00021839141845703125
        seconds_per_batch_mean: 9.352993965148926e-05
        seconds_per_batch_min: 9.107589721679688e-05
        seconds_per_batch_std: 5.200472436763089e-06
    gpu_to_cpu:
      human_readable:
        batch_latency: 23.298 us +/- 0.616 us [22.411 us, 30.756 us]
        batches_per_second: 42.95 K +/- 987.38 [32.51 K, 44.62 K]
      metrics:
        batches_per_second_max: 44620.255319148935
        batches_per_second_mean: 42948.96139054169
        batches_per_second_min: 32513.98449612403
        batches_per_second_std: 987.3846883236897
        seconds_per_batch_max: 3.075599670410156e-05
        seconds_per_batch_mean: 2.3297548294067383e-05
        seconds_per_batch_min: 2.2411346435546875e-05
        seconds_per_batch_std: 6.159746438219798e-07
    on_device_inference:
      human_readable:
        batch_latency: -13528499.151 us +/- 40.643 ms [-14311615.944 us, -13431136.131
          us]
        batches_per_second: -0.07 +/- 0.00 [-0.07, -0.07]
      metrics:
        batches_per_second_max: -0.06987331157566591
        batches_per_second_mean: -0.07391868318990419
        batches_per_second_min: -0.07445386527433001
        batches_per_second_std: 0.0002176531086608864
        seconds_per_batch_max: -13.431136131286621
        seconds_per_batch_mean: -13.528499151229859
        seconds_per_batch_min: -14.311615943908691
        seconds_per_batch_std: 0.0406428385578236
    total:
      human_readable:
        batch_latency: 13.653 ms +/- 44.005 us [13.563 ms, 14.579 ms]
        batches_per_second: 73.25 +/- 0.23 [68.59, 73.73]
      metrics:
        batches_per_second_max: 73.72785600028125
        batches_per_second_mean: 73.24557926794
        batches_per_second_min: 68.59378219700066
        batches_per_second_std: 0.22957894635812917
        seconds_per_batch_max: 0.014578580856323242
        seconds_per_batch_mean: 0.013652838945388794
        seconds_per_batch_min: 0.013563394546508789
        seconds_per_batch_std: 4.400466618967802e-05
  batch_size_256:
    cpu_to_gpu:
      human_readable:
        batch_latency: 143.893 us +/- 5.282 us [141.382 us, 275.135 us]
        batches_per_second: 6.96 K +/- 183.98 [3.63 K, 7.07 K]
      metrics:
        batches_per_second_max: 7073.025295109612
        batches_per_second_mean: 6956.088854565245
        batches_per_second_min: 3634.578856152513
        batches_per_second_std: 183.98223549133579
        seconds_per_batch_max: 0.0002751350402832031
        seconds_per_batch_mean: 0.0001438925266265869
        seconds_per_batch_min: 0.00014138221740722656
        seconds_per_batch_std: 5.2821159145410945e-06
    gpu_to_cpu:
      human_readable:
        batch_latency: 23.438 us +/- 0.574 us [22.650 us, 29.802 us]
        batches_per_second: 42.69 K +/- 938.14 [33.55 K, 44.15 K]
      metrics:
        batches_per_second_max: 44150.56842105263
        batches_per_second_mean: 42689.543359022726
        batches_per_second_min: 33554.432
        batches_per_second_std: 938.1407735999956
        seconds_per_batch_max: 2.9802322387695312e-05
        seconds_per_batch_mean: 2.34375e-05
        seconds_per_batch_min: 2.2649765014648438e-05
        seconds_per_batch_std: 5.739693448739202e-07
    on_device_inference:
      human_readable:
        batch_latency: -13688226.242 us +/- 36.033 ms [-14351840.019 us, -13603103.638
          us]
        batches_per_second: -0.07 +/- 0.00 [-0.07, -0.07]
      metrics:
        batches_per_second_max: -0.06967747680160702
        batches_per_second_mean: -0.07305598285394362
        batches_per_second_min: -0.07351263554509122
        batches_per_second_std: 0.00018936222450039
        seconds_per_batch_max: -13.603103637695312
        seconds_per_batch_mean: -13.68822624206543
        seconds_per_batch_min: -14.351840019226074
        seconds_per_batch_std: 0.03603329965220881
    total:
      human_readable:
        batch_latency: 13.861 ms +/- 39.177 us [13.774 ms, 14.663 ms]
        batches_per_second: 72.15 +/- 0.20 [68.20, 72.60]
      metrics:
        batches_per_second_max: 72.5997265158465
        batches_per_second_mean: 72.14531806610393
        batches_per_second_min: 68.19895611453472
        batches_per_second_std: 0.19933101797672656
        seconds_per_batch_max: 0.014662981033325195
        seconds_per_batch_mean: 0.013861021518707276
        seconds_per_batch_min: 0.01377415657043457
        seconds_per_batch_std: 3.917695060734968e-05


#####
baseline-baseline-py-id - Run 3
2024-02-23 10:07:21
#####
Benchmarking on 12 threads
Warming up with batch_size=1:   0%|          | 0/1 [00:00<?, ?it/s]Warming up with batch_size=1: 100%|██████████| 1/1 [00:00<00:00,  4.16it/s]Warming up with batch_size=1: 100%|██████████| 1/1 [00:00<00:00,  4.15it/s]
Warning: module Bottleneck is treated as a zero-op.
Warning: module ResNet is treated as a zero-op.
Warning! No positional inputs found for a module, assuming batch size is 1.
ResNet(
  60.19 M, 100.000% Params, 11.58 GMac, 100.000% MACs, 
  (conv1): Conv2d(9.41 k, 0.016% Params, 118.01 MMac, 1.019% MACs, 3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(128, 0.000% Params, 1.61 MMac, 0.014% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(0, 0.000% Params, 802.82 KMac, 0.007% MACs, inplace=True)
  (maxpool): MaxPool2d(0, 0.000% Params, 802.82 KMac, 0.007% MACs, kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    215.81 k, 0.359% Params, 680.39 MMac, 5.875% MACs, 
    (0): Bottleneck(
      75.01 k, 0.125% Params, 236.43 MMac, 2.042% MACs, 
      (conv1): Conv2d(4.1 k, 0.007% Params, 12.85 MMac, 0.111% MACs, 64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
      (downsample): Sequential(
        16.9 k, 0.028% Params, 52.99 MMac, 0.458% MACs, 
        (0): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      70.4 k, 0.117% Params, 221.98 MMac, 1.917% MACs, 
      (conv1): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
    )
    (2): Bottleneck(
      70.4 k, 0.117% Params, 221.98 MMac, 1.917% MACs, 
      (conv1): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(36.86 k, 0.061% Params, 115.61 MMac, 0.998% MACs, 64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, 0.000% Params, 401.41 KMac, 0.003% MACs, 64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(16.38 k, 0.027% Params, 51.38 MMac, 0.444% MACs, 64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(512, 0.001% Params, 1.61 MMac, 0.014% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 1.2 MMac, 0.010% MACs, inplace=True)
    )
  )
  (layer2): Sequential(
    2.34 M, 3.887% Params, 1.92 GMac, 16.555% MACs, 
    (0): Bottleneck(
      379.39 k, 0.630% Params, 376.02 MMac, 3.247% MACs, 
      (conv1): Conv2d(32.77 k, 0.054% Params, 102.76 MMac, 0.887% MACs, 256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 802.82 KMac, 0.007% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 903.17 KMac, 0.008% MACs, inplace=True)
      (downsample): Sequential(
        132.1 k, 0.219% Params, 103.56 MMac, 0.894% MACs, 
        (0): Conv2d(131.07 k, 0.218% Params, 102.76 MMac, 0.887% MACs, 256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (2): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (3): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (4): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (5): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (6): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
    (7): Bottleneck(
      280.06 k, 0.465% Params, 220.17 MMac, 1.901% MACs, 
      (conv1): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(147.46 k, 0.245% Params, 115.61 MMac, 0.998% MACs, 128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, 0.000% Params, 200.7 KMac, 0.002% MACs, 128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(65.54 k, 0.109% Params, 51.38 MMac, 0.444% MACs, 128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(1.02 k, 0.002% Params, 802.82 KMac, 0.007% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 602.11 KMac, 0.005% MACs, inplace=True)
    )
  )
  (layer3): Sequential(
    40.61 M, 67.473% Params, 8.05 GMac, 69.501% MACs, 
    (0): Bottleneck(
      1.51 M, 2.513% Params, 374.26 MMac, 3.232% MACs, 
      (conv1): Conv2d(131.07 k, 0.218% Params, 102.76 MMac, 0.887% MACs, 512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 401.41 KMac, 0.003% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 451.58 KMac, 0.004% MACs, inplace=True)
      (downsample): Sequential(
        526.34 k, 0.874% Params, 103.16 MMac, 0.891% MACs, 
        (0): Conv2d(524.29 k, 0.871% Params, 102.76 MMac, 0.887% MACs, 512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (2): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (3): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (4): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (5): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (6): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (7): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (8): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (9): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (10): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (11): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (12): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (13): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (14): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (15): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (16): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (17): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (18): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (19): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (20): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (21): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (22): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (23): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (24): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (25): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (26): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (27): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (28): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (29): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (30): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (31): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (32): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (33): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (34): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
    (35): Bottleneck(
      1.12 M, 1.856% Params, 219.27 MMac, 1.893% MACs, 
      (conv1): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(589.82 k, 0.980% Params, 115.61 MMac, 0.998% MACs, 256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, 0.001% Params, 100.35 KMac, 0.001% MACs, 256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(262.14 k, 0.436% Params, 51.38 MMac, 0.444% MACs, 256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(2.05 k, 0.003% Params, 401.41 KMac, 0.003% MACs, 1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 301.06 KMac, 0.003% MACs, inplace=True)
    )
  )
  (layer4): Sequential(
    14.96 M, 24.861% Params, 811.02 MMac, 7.003% MACs, 
    (0): Bottleneck(
      6.04 M, 10.034% Params, 373.38 MMac, 3.224% MACs, 
      (conv1): Conv2d(524.29 k, 0.871% Params, 102.76 MMac, 0.887% MACs, 1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 200.7 KMac, 0.002% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 225.79 KMac, 0.002% MACs, inplace=True)
      (downsample): Sequential(
        2.1 M, 3.491% Params, 102.96 MMac, 0.889% MACs, 
        (0): Conv2d(2.1 M, 3.484% Params, 102.76 MMac, 0.887% MACs, 1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      4.46 M, 7.414% Params, 218.82 MMac, 1.890% MACs, 
      (conv1): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 150.53 KMac, 0.001% MACs, inplace=True)
    )
    (2): Bottleneck(
      4.46 M, 7.414% Params, 218.82 MMac, 1.890% MACs, 
      (conv1): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(2.36 M, 3.920% Params, 115.61 MMac, 0.998% MACs, 512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(1.02 k, 0.002% Params, 50.18 KMac, 0.000% MACs, 512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(1.05 M, 1.742% Params, 51.38 MMac, 0.444% MACs, 512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(4.1 k, 0.007% Params, 200.7 KMac, 0.002% MACs, 2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(0, 0.000% Params, 150.53 KMac, 0.001% MACs, inplace=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(0, 0.000% Params, 100.35 KMac, 0.001% MACs, output_size=(1, 1))
  (fc): Linear(2.05 M, 3.404% Params, 2.05 MMac, 0.018% MACs, in_features=2048, out_features=1000, bias=True)
)
Warming up with batch_size=1:   0%|          | 0/100 [00:00<?, ?it/s]Warming up with batch_size=1:  10%|█         | 10/100 [00:00<00:00, 96.15it/s]Warming up with batch_size=1:  20%|██        | 20/100 [00:00<00:00, 96.55it/s]Warming up with batch_size=1:  30%|███       | 30/100 [00:00<00:00, 96.64it/s]Warming up with batch_size=1:  40%|████      | 40/100 [00:00<00:00, 96.69it/s]Warming up with batch_size=1:  50%|█████     | 50/100 [00:00<00:00, 96.76it/s]Warming up with batch_size=1:  60%|██████    | 60/100 [00:00<00:00, 96.74it/s]Warming up with batch_size=1:  70%|███████   | 70/100 [00:00<00:00, 96.73it/s]Warming up with batch_size=1:  80%|████████  | 80/100 [00:00<00:00, 96.79it/s]Warming up with batch_size=1:  90%|█████████ | 90/100 [00:00<00:00, 96.81it/s]Warming up with batch_size=1: 100%|██████████| 100/100 [00:01<00:00, 96.81it/s]Warming up with batch_size=1: 100%|██████████| 100/100 [00:01<00:00, 96.73it/s]
STAGE:2024-02-23 10:06:51 177961:177961 ActivityProfilerController.cpp:312] Completed Stage: Warm Up
STAGE:2024-02-23 10:06:51 177961:177961 ActivityProfilerController.cpp:318] Completed Stage: Collection
STAGE:2024-02-23 10:06:51 177961:177961 ActivityProfilerController.cpp:322] Completed Stage: Post Processing
Measuring inference for batch_size=1:   0%|          | 0/1000 [00:00<?, ?it/s]Measuring inference for batch_size=1:   1%|          | 8/1000 [00:00<00:13, 72.23it/s]Measuring inference for batch_size=1:   2%|▏         | 16/1000 [00:00<00:13, 72.56it/s]Measuring inference for batch_size=1:   2%|▏         | 24/1000 [00:00<00:13, 72.67it/s]Measuring inference for batch_size=1:   3%|▎         | 32/1000 [00:00<00:13, 72.62it/s]Measuring inference for batch_size=1:   4%|▍         | 40/1000 [00:00<00:13, 72.64it/s]Measuring inference for batch_size=1:   5%|▍         | 48/1000 [00:00<00:13, 72.65it/s]Measuring inference for batch_size=1:   6%|▌         | 56/1000 [00:00<00:12, 72.66it/s]Measuring inference for batch_size=1:   6%|▋         | 64/1000 [00:00<00:12, 72.65it/s]Measuring inference for batch_size=1:   7%|▋         | 72/1000 [00:00<00:12, 72.67it/s]Measuring inference for batch_size=1:   8%|▊         | 80/1000 [00:01<00:12, 72.70it/s]Measuring inference for batch_size=1:   9%|▉         | 88/1000 [00:01<00:12, 72.69it/s]Measuring inference for batch_size=1:  10%|▉         | 96/1000 [00:01<00:12, 72.69it/s]Measuring inference for batch_size=1:  10%|█         | 104/1000 [00:01<00:12, 72.67it/s]Measuring inference for batch_size=1:  11%|█         | 112/1000 [00:01<00:12, 72.70it/s]Measuring inference for batch_size=1:  12%|█▏        | 120/1000 [00:01<00:12, 72.71it/s]Measuring inference for batch_size=1:  13%|█▎        | 128/1000 [00:01<00:11, 72.71it/s]Measuring inference for batch_size=1:  14%|█▎        | 136/1000 [00:01<00:11, 72.71it/s]Measuring inference for batch_size=1:  14%|█▍        | 144/1000 [00:01<00:11, 72.70it/s]Measuring inference for batch_size=1:  15%|█▌        | 152/1000 [00:02<00:11, 72.71it/s]Measuring inference for batch_size=1:  16%|█▌        | 160/1000 [00:02<00:11, 72.74it/s]Measuring inference for batch_size=1:  17%|█▋        | 168/1000 [00:02<00:11, 72.73it/s]Measuring inference for batch_size=1:  18%|█▊        | 176/1000 [00:02<00:11, 72.78it/s]Measuring inference for batch_size=1:  18%|█▊        | 184/1000 [00:02<00:11, 72.80it/s]Measuring inference for batch_size=1:  19%|█▉        | 192/1000 [00:02<00:11, 72.79it/s]Measuring inference for batch_size=1:  20%|██        | 200/1000 [00:02<00:10, 72.81it/s]Measuring inference for batch_size=1:  21%|██        | 208/1000 [00:02<00:10, 72.79it/s]Measuring inference for batch_size=1:  22%|██▏       | 216/1000 [00:02<00:10, 72.80it/s]Measuring inference for batch_size=1:  22%|██▏       | 224/1000 [00:03<00:10, 72.81it/s]Measuring inference for batch_size=1:  23%|██▎       | 232/1000 [00:03<00:10, 72.83it/s]Measuring inference for batch_size=1:  24%|██▍       | 240/1000 [00:03<00:10, 72.80it/s]Measuring inference for batch_size=1:  25%|██▍       | 248/1000 [00:03<00:10, 72.78it/s]Measuring inference for batch_size=1:  26%|██▌       | 256/1000 [00:03<00:10, 72.77it/s]Measuring inference for batch_size=1:  26%|██▋       | 264/1000 [00:03<00:10, 72.76it/s]Measuring inference for batch_size=1:  27%|██▋       | 272/1000 [00:03<00:10, 72.77it/s]Measuring inference for batch_size=1:  28%|██▊       | 280/1000 [00:03<00:09, 72.76it/s]Measuring inference for batch_size=1:  29%|██▉       | 288/1000 [00:03<00:09, 72.76it/s]Measuring inference for batch_size=1:  30%|██▉       | 296/1000 [00:04<00:09, 72.77it/s]Measuring inference for batch_size=1:  30%|███       | 304/1000 [00:04<00:09, 72.76it/s]Measuring inference for batch_size=1:  31%|███       | 312/1000 [00:04<00:09, 72.77it/s]Measuring inference for batch_size=1:  32%|███▏      | 320/1000 [00:04<00:09, 72.81it/s]Measuring inference for batch_size=1:  33%|███▎      | 328/1000 [00:04<00:09, 72.78it/s]Measuring inference for batch_size=1:  34%|███▎      | 336/1000 [00:04<00:09, 72.80it/s]Measuring inference for batch_size=1:  34%|███▍      | 344/1000 [00:04<00:09, 72.77it/s]Measuring inference for batch_size=1:  35%|███▌      | 352/1000 [00:04<00:08, 72.80it/s]Measuring inference for batch_size=1:  36%|███▌      | 360/1000 [00:04<00:08, 72.79it/s]Measuring inference for batch_size=1:  37%|███▋      | 368/1000 [00:05<00:08, 72.78it/s]Measuring inference for batch_size=1:  38%|███▊      | 376/1000 [00:05<00:08, 72.76it/s]Measuring inference for batch_size=1:  38%|███▊      | 384/1000 [00:05<00:08, 72.75it/s]Measuring inference for batch_size=1:  39%|███▉      | 392/1000 [00:05<00:08, 72.76it/s]Measuring inference for batch_size=1:  40%|████      | 400/1000 [00:05<00:08, 72.75it/s]Measuring inference for batch_size=1:  41%|████      | 408/1000 [00:05<00:08, 72.75it/s]Measuring inference for batch_size=1:  42%|████▏     | 416/1000 [00:05<00:08, 72.74it/s]Measuring inference for batch_size=1:  42%|████▏     | 424/1000 [00:05<00:07, 72.74it/s]Measuring inference for batch_size=1:  43%|████▎     | 432/1000 [00:05<00:07, 72.73it/s]Measuring inference for batch_size=1:  44%|████▍     | 440/1000 [00:06<00:07, 72.72it/s]Measuring inference for batch_size=1:  45%|████▍     | 448/1000 [00:06<00:07, 72.72it/s]Measuring inference for batch_size=1:  46%|████▌     | 456/1000 [00:06<00:07, 72.71it/s]Measuring inference for batch_size=1:  46%|████▋     | 464/1000 [00:06<00:07, 72.76it/s]Measuring inference for batch_size=1:  47%|████▋     | 472/1000 [00:06<00:07, 72.76it/s]Measuring inference for batch_size=1:  48%|████▊     | 480/1000 [00:06<00:07, 72.76it/s]Measuring inference for batch_size=1:  49%|████▉     | 488/1000 [00:06<00:07, 72.76it/s]Measuring inference for batch_size=1:  50%|████▉     | 496/1000 [00:06<00:06, 72.72it/s]Measuring inference for batch_size=1:  50%|█████     | 504/1000 [00:06<00:06, 72.72it/s]Measuring inference for batch_size=1:  51%|█████     | 512/1000 [00:07<00:06, 72.69it/s]Measuring inference for batch_size=1:  52%|█████▏    | 520/1000 [00:07<00:06, 72.68it/s]Measuring inference for batch_size=1:  53%|█████▎    | 528/1000 [00:07<00:06, 72.67it/s]Measuring inference for batch_size=1:  54%|█████▎    | 536/1000 [00:07<00:06, 72.72it/s]Measuring inference for batch_size=1:  54%|█████▍    | 544/1000 [00:07<00:06, 72.74it/s]Measuring inference for batch_size=1:  55%|█████▌    | 552/1000 [00:07<00:06, 72.76it/s]Measuring inference for batch_size=1:  56%|█████▌    | 560/1000 [00:07<00:06, 72.76it/s]Measuring inference for batch_size=1:  57%|█████▋    | 568/1000 [00:07<00:05, 72.77it/s]Measuring inference for batch_size=1:  58%|█████▊    | 576/1000 [00:07<00:05, 72.77it/s]Measuring inference for batch_size=1:  58%|█████▊    | 584/1000 [00:08<00:05, 72.81it/s]Measuring inference for batch_size=1:  59%|█████▉    | 592/1000 [00:08<00:05, 72.79it/s]Measuring inference for batch_size=1:  60%|██████    | 600/1000 [00:08<00:05, 72.80it/s]Measuring inference for batch_size=1:  61%|██████    | 608/1000 [00:08<00:05, 72.80it/s]Measuring inference for batch_size=1:  62%|██████▏   | 616/1000 [00:08<00:05, 72.80it/s]Measuring inference for batch_size=1:  62%|██████▏   | 624/1000 [00:08<00:05, 72.77it/s]Measuring inference for batch_size=1:  63%|██████▎   | 632/1000 [00:08<00:05, 72.75it/s]Measuring inference for batch_size=1:  64%|██████▍   | 640/1000 [00:08<00:04, 72.72it/s]Measuring inference for batch_size=1:  65%|██████▍   | 648/1000 [00:08<00:04, 72.74it/s]Measuring inference for batch_size=1:  66%|██████▌   | 656/1000 [00:09<00:04, 72.71it/s]Measuring inference for batch_size=1:  66%|██████▋   | 664/1000 [00:09<00:04, 72.75it/s]Measuring inference for batch_size=1:  67%|██████▋   | 672/1000 [00:09<00:04, 72.74it/s]Measuring inference for batch_size=1:  68%|██████▊   | 680/1000 [00:09<00:04, 72.72it/s]Measuring inference for batch_size=1:  69%|██████▉   | 688/1000 [00:09<00:04, 72.68it/s]Measuring inference for batch_size=1:  70%|██████▉   | 696/1000 [00:09<00:04, 72.68it/s]Measuring inference for batch_size=1:  70%|███████   | 704/1000 [00:09<00:04, 72.65it/s]Measuring inference for batch_size=1:  71%|███████   | 712/1000 [00:09<00:03, 72.67it/s]Measuring inference for batch_size=1:  72%|███████▏  | 720/1000 [00:09<00:03, 72.65it/s]Measuring inference for batch_size=1:  73%|███████▎  | 728/1000 [00:10<00:03, 72.65it/s]Measuring inference for batch_size=1:  74%|███████▎  | 736/1000 [00:10<00:03, 72.65it/s]Measuring inference for batch_size=1:  74%|███████▍  | 744/1000 [00:10<00:03, 72.66it/s]Measuring inference for batch_size=1:  75%|███████▌  | 752/1000 [00:10<00:03, 72.62it/s]Measuring inference for batch_size=1:  76%|███████▌  | 760/1000 [00:10<00:03, 72.62it/s]Measuring inference for batch_size=1:  77%|███████▋  | 768/1000 [00:10<00:03, 72.61it/s]Measuring inference for batch_size=1:  78%|███████▊  | 776/1000 [00:10<00:03, 72.63it/s]Measuring inference for batch_size=1:  78%|███████▊  | 784/1000 [00:10<00:02, 72.63it/s]Measuring inference for batch_size=1:  79%|███████▉  | 792/1000 [00:10<00:02, 72.67it/s]Measuring inference for batch_size=1:  80%|████████  | 800/1000 [00:11<00:02, 72.68it/s]Measuring inference for batch_size=1:  81%|████████  | 808/1000 [00:11<00:02, 72.70it/s]Measuring inference for batch_size=1:  82%|████████▏ | 816/1000 [00:11<00:02, 72.69it/s]Measuring inference for batch_size=1:  82%|████████▏ | 824/1000 [00:11<00:02, 72.70it/s]Measuring inference for batch_size=1:  83%|████████▎ | 832/1000 [00:11<00:02, 72.68it/s]Measuring inference for batch_size=1:  84%|████████▍ | 840/1000 [00:11<00:02, 72.69it/s]Measuring inference for batch_size=1:  85%|████████▍ | 848/1000 [00:11<00:02, 72.68it/s]Measuring inference for batch_size=1:  86%|████████▌ | 856/1000 [00:11<00:01, 72.68it/s]Measuring inference for batch_size=1:  86%|████████▋ | 864/1000 [00:11<00:01, 72.66it/s]Measuring inference for batch_size=1:  87%|████████▋ | 872/1000 [00:11<00:01, 72.69it/s]Measuring inference for batch_size=1:  88%|████████▊ | 880/1000 [00:12<00:01, 72.68it/s]Measuring inference for batch_size=1:  89%|████████▉ | 888/1000 [00:12<00:01, 72.69it/s]Measuring inference for batch_size=1:  90%|████████▉ | 896/1000 [00:12<00:01, 72.69it/s]Measuring inference for batch_size=1:  90%|█████████ | 904/1000 [00:12<00:01, 72.68it/s]Measuring inference for batch_size=1:  91%|█████████ | 912/1000 [00:12<00:01, 72.64it/s]Measuring inference for batch_size=1:  92%|█████████▏| 920/1000 [00:12<00:01, 72.66it/s]Measuring inference for batch_size=1:  93%|█████████▎| 928/1000 [00:12<00:00, 72.67it/s]Measuring inference for batch_size=1:  94%|█████████▎| 936/1000 [00:12<00:00, 72.69it/s]Measuring inference for batch_size=1:  94%|█████████▍| 944/1000 [00:12<00:00, 72.68it/s]Measuring inference for batch_size=1:  95%|█████████▌| 952/1000 [00:13<00:00, 72.69it/s]Measuring inference for batch_size=1:  96%|█████████▌| 960/1000 [00:13<00:00, 72.73it/s]Measuring inference for batch_size=1:  97%|█████████▋| 968/1000 [00:13<00:00, 72.75it/s]Measuring inference for batch_size=1:  98%|█████████▊| 976/1000 [00:13<00:00, 72.71it/s]Measuring inference for batch_size=1:  98%|█████████▊| 984/1000 [00:13<00:00, 72.72it/s]Measuring inference for batch_size=1:  99%|█████████▉| 992/1000 [00:13<00:00, 72.71it/s]Measuring inference for batch_size=1: 100%|██████████| 1000/1000 [00:13<00:00, 72.73it/s]Measuring inference for batch_size=1: 100%|██████████| 1000/1000 [00:13<00:00, 72.72it/s]
Unable to measure energy consumption. Device must be a NVIDIA Jetson.
Warming up with batch_size=256:   0%|          | 0/100 [00:00<?, ?it/s]Warming up with batch_size=256:   8%|▊         | 8/100 [00:00<00:01, 72.31it/s]Warming up with batch_size=256:  16%|█▌        | 16/100 [00:00<00:01, 72.46it/s]Warming up with batch_size=256:  24%|██▍       | 24/100 [00:00<00:01, 72.50it/s]Warming up with batch_size=256:  32%|███▏      | 32/100 [00:00<00:00, 72.53it/s]Warming up with batch_size=256:  40%|████      | 40/100 [00:00<00:00, 72.54it/s]Warming up with batch_size=256:  48%|████▊     | 48/100 [00:00<00:00, 72.54it/s]Warming up with batch_size=256:  56%|█████▌    | 56/100 [00:00<00:00, 72.52it/s]Warming up with batch_size=256:  64%|██████▍   | 64/100 [00:00<00:00, 72.50it/s]Warming up with batch_size=256:  72%|███████▏  | 72/100 [00:00<00:00, 72.49it/s]Warming up with batch_size=256:  80%|████████  | 80/100 [00:01<00:00, 72.51it/s]Warming up with batch_size=256:  88%|████████▊ | 88/100 [00:01<00:00, 72.51it/s]Warming up with batch_size=256:  96%|█████████▌| 96/100 [00:01<00:00, 72.47it/s]Warming up with batch_size=256: 100%|██████████| 100/100 [00:01<00:00, 72.49it/s]
STAGE:2024-02-23 10:07:06 177961:177961 ActivityProfilerController.cpp:312] Completed Stage: Warm Up
STAGE:2024-02-23 10:07:06 177961:177961 ActivityProfilerController.cpp:318] Completed Stage: Collection
STAGE:2024-02-23 10:07:06 177961:177961 ActivityProfilerController.cpp:322] Completed Stage: Post Processing
Measuring inference for batch_size=256:   0%|          | 0/1000 [00:00<?, ?it/s]Measuring inference for batch_size=256:   1%|          | 8/1000 [00:00<00:13, 71.26it/s]Measuring inference for batch_size=256:   2%|▏         | 16/1000 [00:00<00:13, 71.48it/s]Measuring inference for batch_size=256:   2%|▏         | 24/1000 [00:00<00:13, 71.35it/s]Measuring inference for batch_size=256:   3%|▎         | 32/1000 [00:00<00:13, 71.44it/s]Measuring inference for batch_size=256:   4%|▍         | 40/1000 [00:00<00:13, 71.52it/s]Measuring inference for batch_size=256:   5%|▍         | 48/1000 [00:00<00:13, 71.54it/s]Measuring inference for batch_size=256:   6%|▌         | 56/1000 [00:00<00:13, 71.59it/s]Measuring inference for batch_size=256:   6%|▋         | 64/1000 [00:00<00:13, 71.61it/s]Measuring inference for batch_size=256:   7%|▋         | 72/1000 [00:01<00:12, 71.63it/s]Measuring inference for batch_size=256:   8%|▊         | 80/1000 [00:01<00:12, 71.65it/s]Measuring inference for batch_size=256:   9%|▉         | 88/1000 [00:01<00:12, 71.66it/s]Measuring inference for batch_size=256:  10%|▉         | 96/1000 [00:01<00:12, 71.65it/s]Measuring inference for batch_size=256:  10%|█         | 104/1000 [00:01<00:12, 71.71it/s]Measuring inference for batch_size=256:  11%|█         | 112/1000 [00:01<00:12, 71.69it/s]Measuring inference for batch_size=256:  12%|█▏        | 120/1000 [00:01<00:12, 71.71it/s]Measuring inference for batch_size=256:  13%|█▎        | 128/1000 [00:01<00:12, 71.73it/s]Measuring inference for batch_size=256:  14%|█▎        | 136/1000 [00:01<00:12, 71.73it/s]Measuring inference for batch_size=256:  14%|█▍        | 144/1000 [00:02<00:11, 71.71it/s]Measuring inference for batch_size=256:  15%|█▌        | 152/1000 [00:02<00:11, 71.76it/s]Measuring inference for batch_size=256:  16%|█▌        | 160/1000 [00:02<00:11, 71.76it/s]Measuring inference for batch_size=256:  17%|█▋        | 168/1000 [00:02<00:11, 71.79it/s]Measuring inference for batch_size=256:  18%|█▊        | 176/1000 [00:02<00:11, 71.81it/s]Measuring inference for batch_size=256:  18%|█▊        | 184/1000 [00:02<00:11, 71.79it/s]Measuring inference for batch_size=256:  19%|█▉        | 192/1000 [00:02<00:11, 71.77it/s]Measuring inference for batch_size=256:  20%|██        | 200/1000 [00:02<00:11, 71.78it/s]Measuring inference for batch_size=256:  21%|██        | 208/1000 [00:02<00:11, 71.76it/s]Measuring inference for batch_size=256:  22%|██▏       | 216/1000 [00:03<00:10, 71.76it/s]Measuring inference for batch_size=256:  22%|██▏       | 224/1000 [00:03<00:10, 71.76it/s]Measuring inference for batch_size=256:  23%|██▎       | 232/1000 [00:03<00:10, 71.81it/s]Measuring inference for batch_size=256:  24%|██▍       | 240/1000 [00:03<00:10, 71.82it/s]Measuring inference for batch_size=256:  25%|██▍       | 248/1000 [00:03<00:10, 71.84it/s]Measuring inference for batch_size=256:  26%|██▌       | 256/1000 [00:03<00:10, 71.83it/s]Measuring inference for batch_size=256:  26%|██▋       | 264/1000 [00:03<00:10, 71.87it/s]Measuring inference for batch_size=256:  27%|██▋       | 272/1000 [00:03<00:10, 71.86it/s]Measuring inference for batch_size=256:  28%|██▊       | 280/1000 [00:03<00:10, 71.85it/s]Measuring inference for batch_size=256:  29%|██▉       | 288/1000 [00:04<00:09, 71.83it/s]Measuring inference for batch_size=256:  30%|██▉       | 296/1000 [00:04<00:09, 71.84it/s]Measuring inference for batch_size=256:  30%|███       | 304/1000 [00:04<00:09, 71.82it/s]Measuring inference for batch_size=256:  31%|███       | 312/1000 [00:04<00:09, 71.81it/s]Measuring inference for batch_size=256:  32%|███▏      | 320/1000 [00:04<00:09, 71.79it/s]Measuring inference for batch_size=256:  33%|███▎      | 328/1000 [00:04<00:09, 71.78it/s]Measuring inference for batch_size=256:  34%|███▎      | 336/1000 [00:04<00:09, 71.77it/s]Measuring inference for batch_size=256:  34%|███▍      | 344/1000 [00:04<00:09, 71.77it/s]Measuring inference for batch_size=256:  35%|███▌      | 352/1000 [00:04<00:09, 71.74it/s]Measuring inference for batch_size=256:  36%|███▌      | 360/1000 [00:05<00:08, 71.72it/s]Measuring inference for batch_size=256:  37%|███▋      | 368/1000 [00:05<00:08, 71.66it/s]Measuring inference for batch_size=256:  38%|███▊      | 376/1000 [00:05<00:08, 71.62it/s]Measuring inference for batch_size=256:  38%|███▊      | 384/1000 [00:05<00:08, 71.58it/s]Measuring inference for batch_size=256:  39%|███▉      | 392/1000 [00:05<00:08, 71.60it/s]Measuring inference for batch_size=256:  40%|████      | 400/1000 [00:05<00:08, 71.60it/s]Measuring inference for batch_size=256:  41%|████      | 408/1000 [00:05<00:08, 71.66it/s]Measuring inference for batch_size=256:  42%|████▏     | 416/1000 [00:05<00:08, 71.68it/s]Measuring inference for batch_size=256:  42%|████▏     | 424/1000 [00:05<00:08, 71.69it/s]Measuring inference for batch_size=256:  43%|████▎     | 432/1000 [00:06<00:07, 71.67it/s]Measuring inference for batch_size=256:  44%|████▍     | 440/1000 [00:06<00:07, 71.70it/s]Measuring inference for batch_size=256:  45%|████▍     | 448/1000 [00:06<00:07, 71.72it/s]Measuring inference for batch_size=256:  46%|████▌     | 456/1000 [00:06<00:07, 71.72it/s]Measuring inference for batch_size=256:  46%|████▋     | 464/1000 [00:06<00:07, 71.72it/s]Measuring inference for batch_size=256:  47%|████▋     | 472/1000 [00:06<00:07, 71.73it/s]Measuring inference for batch_size=256:  48%|████▊     | 480/1000 [00:06<00:07, 71.74it/s]Measuring inference for batch_size=256:  49%|████▉     | 488/1000 [00:06<00:07, 71.74it/s]Measuring inference for batch_size=256:  50%|████▉     | 496/1000 [00:06<00:07, 71.76it/s]Measuring inference for batch_size=256:  50%|█████     | 504/1000 [00:07<00:06, 71.79it/s]Measuring inference for batch_size=256:  51%|█████     | 512/1000 [00:07<00:06, 71.79it/s]Measuring inference for batch_size=256:  52%|█████▏    | 520/1000 [00:07<00:06, 71.81it/s]Measuring inference for batch_size=256:  53%|█████▎    | 528/1000 [00:07<00:06, 71.79it/s]Measuring inference for batch_size=256:  54%|█████▎    | 536/1000 [00:07<00:06, 71.81it/s]Measuring inference for batch_size=256:  54%|█████▍    | 544/1000 [00:07<00:06, 71.78it/s]Measuring inference for batch_size=256:  55%|█████▌    | 552/1000 [00:07<00:06, 71.80it/s]Measuring inference for batch_size=256:  56%|█████▌    | 560/1000 [00:07<00:06, 71.75it/s]Measuring inference for batch_size=256:  57%|█████▋    | 568/1000 [00:07<00:06, 71.77it/s]Measuring inference for batch_size=256:  58%|█████▊    | 576/1000 [00:08<00:05, 71.76it/s]Measuring inference for batch_size=256:  58%|█████▊    | 584/1000 [00:08<00:05, 71.77it/s]Measuring inference for batch_size=256:  59%|█████▉    | 592/1000 [00:08<00:05, 71.73it/s]Measuring inference for batch_size=256:  60%|██████    | 600/1000 [00:08<00:05, 71.75it/s]Measuring inference for batch_size=256:  61%|██████    | 608/1000 [00:08<00:05, 71.73it/s]Measuring inference for batch_size=256:  62%|██████▏   | 616/1000 [00:08<00:05, 71.70it/s]Measuring inference for batch_size=256:  62%|██████▏   | 624/1000 [00:08<00:05, 71.71it/s]Measuring inference for batch_size=256:  63%|██████▎   | 632/1000 [00:08<00:05, 71.74it/s]Measuring inference for batch_size=256:  64%|██████▍   | 640/1000 [00:08<00:05, 71.74it/s]Measuring inference for batch_size=256:  65%|██████▍   | 648/1000 [00:09<00:04, 71.76it/s]Measuring inference for batch_size=256:  66%|██████▌   | 656/1000 [00:09<00:04, 71.78it/s]Measuring inference for batch_size=256:  66%|██████▋   | 664/1000 [00:09<00:04, 71.77it/s]Measuring inference for batch_size=256:  67%|██████▋   | 672/1000 [00:09<00:04, 71.73it/s]Measuring inference for batch_size=256:  68%|██████▊   | 680/1000 [00:09<00:04, 71.73it/s]Measuring inference for batch_size=256:  69%|██████▉   | 688/1000 [00:09<00:04, 71.71it/s]Measuring inference for batch_size=256:  70%|██████▉   | 696/1000 [00:09<00:04, 71.73it/s]Measuring inference for batch_size=256:  70%|███████   | 704/1000 [00:09<00:04, 71.69it/s]Measuring inference for batch_size=256:  71%|███████   | 712/1000 [00:09<00:04, 71.71it/s]Measuring inference for batch_size=256:  72%|███████▏  | 720/1000 [00:10<00:03, 71.69it/s]Measuring inference for batch_size=256:  73%|███████▎  | 728/1000 [00:10<00:03, 71.71it/s]Measuring inference for batch_size=256:  74%|███████▎  | 736/1000 [00:10<00:03, 71.69it/s]Measuring inference for batch_size=256:  74%|███████▍  | 744/1000 [00:10<00:03, 71.70it/s]Measuring inference for batch_size=256:  75%|███████▌  | 752/1000 [00:10<00:03, 71.67it/s]Measuring inference for batch_size=256:  76%|███████▌  | 760/1000 [00:10<00:03, 71.67it/s]Measuring inference for batch_size=256:  77%|███████▋  | 768/1000 [00:10<00:03, 71.66it/s]Measuring inference for batch_size=256:  78%|███████▊  | 776/1000 [00:10<00:03, 71.67it/s]Measuring inference for batch_size=256:  78%|███████▊  | 784/1000 [00:10<00:03, 71.67it/s]Measuring inference for batch_size=256:  79%|███████▉  | 792/1000 [00:11<00:02, 71.68it/s]Measuring inference for batch_size=256:  80%|████████  | 800/1000 [00:11<00:02, 71.67it/s]Measuring inference for batch_size=256:  81%|████████  | 808/1000 [00:11<00:02, 71.71it/s]Measuring inference for batch_size=256:  82%|████████▏ | 816/1000 [00:11<00:02, 71.69it/s]Measuring inference for batch_size=256:  82%|████████▏ | 824/1000 [00:11<00:02, 71.74it/s]Measuring inference for batch_size=256:  83%|████████▎ | 832/1000 [00:11<00:02, 71.72it/s]Measuring inference for batch_size=256:  84%|████████▍ | 840/1000 [00:11<00:02, 71.75it/s]Measuring inference for batch_size=256:  85%|████████▍ | 848/1000 [00:11<00:02, 71.73it/s]Measuring inference for batch_size=256:  86%|████████▌ | 856/1000 [00:11<00:02, 71.71it/s]Measuring inference for batch_size=256:  86%|████████▋ | 864/1000 [00:12<00:01, 71.69it/s]Measuring inference for batch_size=256:  87%|████████▋ | 872/1000 [00:12<00:01, 71.71it/s]Measuring inference for batch_size=256:  88%|████████▊ | 880/1000 [00:12<00:01, 71.72it/s]Measuring inference for batch_size=256:  89%|████████▉ | 888/1000 [00:12<00:01, 71.73it/s]Measuring inference for batch_size=256:  90%|████████▉ | 896/1000 [00:12<00:01, 71.72it/s]Measuring inference for batch_size=256:  90%|█████████ | 904/1000 [00:12<00:01, 71.72it/s]Measuring inference for batch_size=256:  91%|█████████ | 912/1000 [00:12<00:01, 71.70it/s]Measuring inference for batch_size=256:  92%|█████████▏| 920/1000 [00:12<00:01, 71.69it/s]Measuring inference for batch_size=256:  93%|█████████▎| 928/1000 [00:12<00:01, 71.70it/s]Measuring inference for batch_size=256:  94%|█████████▎| 936/1000 [00:13<00:00, 71.69it/s]Measuring inference for batch_size=256:  94%|█████████▍| 944/1000 [00:13<00:00, 71.70it/s]Measuring inference for batch_size=256:  95%|█████████▌| 952/1000 [00:13<00:00, 71.72it/s]Measuring inference for batch_size=256:  96%|█████████▌| 960/1000 [00:13<00:00, 71.71it/s]Measuring inference for batch_size=256:  97%|█████████▋| 968/1000 [00:13<00:00, 71.74it/s]Measuring inference for batch_size=256:  98%|█████████▊| 976/1000 [00:13<00:00, 71.73it/s]Measuring inference for batch_size=256:  98%|█████████▊| 984/1000 [00:13<00:00, 71.76it/s]Measuring inference for batch_size=256:  99%|█████████▉| 992/1000 [00:13<00:00, 71.75it/s]Measuring inference for batch_size=256: 100%|██████████| 1000/1000 [00:13<00:00, 71.76it/s]Measuring inference for batch_size=256: 100%|██████████| 1000/1000 [00:13<00:00, 71.72it/s]
Unable to measure energy consumption. Device must be a NVIDIA Jetson.
device: cuda
flops: 11580687848
machine_info:
  cpu:
    architecture: x86_64
    cores:
      physical: 12
      total: 24
    frequency: 3.80 GHz
    model: AMD Ryzen 9 3900X 12-Core Processor
  gpus:
  - memory: 12288.0 MB
    name: NVIDIA GeForce RTX 3060
  memory:
    available: 27.53 GB
    total: 31.28 GB
    used: 3.28 GB
  system:
    node: baseline
    release: 6.5.0-9-generic
    system: Linux
memory:
  batch_size_1:
    max_inference: 374.76 MB
    max_inference_bytes: 392962560
    post_inference: 238.40 MB
    post_inference_bytes: 249983488
    pre_inference: 238.40 MB
    pre_inference_bytes: 249983488
  batch_size_256:
    max_inference: 378.48 MB
    max_inference_bytes: 396866048
    post_inference: 238.40 MB
    post_inference_bytes: 249983488
    pre_inference: 238.40 MB
    pre_inference_bytes: 249983488
params: 60192808
timing:
  batch_size_1:
    cpu_to_gpu:
      human_readable:
        batch_latency: 93.306 us +/- 5.029 us [91.076 us, 216.722 us]
        batches_per_second: 10.74 K +/- 393.41 [4.61 K, 10.98 K]
      metrics:
        batches_per_second_max: 10979.853403141362
        batches_per_second_mean: 10737.154074651466
        batches_per_second_min: 4614.195819581958
        batches_per_second_std: 393.41170866426336
        seconds_per_batch_max: 0.0002167224884033203
        seconds_per_batch_mean: 9.330606460571289e-05
        seconds_per_batch_min: 9.107589721679688e-05
        seconds_per_batch_std: 5.0293814881088245e-06
    gpu_to_cpu:
      human_readable:
        batch_latency: 23.128 us +/- 0.636 us [22.411 us, 30.518 us]
        batches_per_second: 43.26 K +/- 988.92 [32.77 K, 44.62 K]
      metrics:
        batches_per_second_max: 44620.255319148935
        batches_per_second_mean: 43264.23303490346
        batches_per_second_min: 32768.0
        batches_per_second_std: 988.917748927635
        seconds_per_batch_max: 3.0517578125e-05
        seconds_per_batch_mean: 2.3128271102905275e-05
        seconds_per_batch_min: 2.2411346435546875e-05
        seconds_per_batch_std: 6.36490581936178e-07
    on_device_inference:
      human_readable:
        batch_latency: -13618975.618 us +/- 33.085 ms [-14342368.126 us, -13526783.943
          us]
        batches_per_second: -0.07 +/- 0.00 [-0.07, -0.07]
      metrics:
        batches_per_second_max: -0.06972349274685531
        batches_per_second_mean: -0.07342738436310492
        batches_per_second_min: -0.07392740241884774
        batches_per_second_std: 0.00017407126024988944
        seconds_per_batch_max: -13.52678394317627
        seconds_per_batch_mean: -13.618975618362427
        seconds_per_batch_min: -14.342368125915527
        seconds_per_batch_std: 0.03308547089103048
    total:
      human_readable:
        batch_latency: 13.743 ms +/- 36.797 us [13.649 ms, 14.607 ms]
        batches_per_second: 72.76 +/- 0.19 [68.46, 73.27]
      metrics:
        batches_per_second_max: 73.2655114589156
        batches_per_second_mean: 72.76390551665216
        batches_per_second_min: 68.46166653064556
        batches_per_second_std: 0.18850529357219858
        seconds_per_batch_max: 0.014606714248657227
        seconds_per_batch_mean: 0.013743172883987426
        seconds_per_batch_min: 0.01364898681640625
        seconds_per_batch_std: 3.679662549807243e-05
  batch_size_256:
    cpu_to_gpu:
      human_readable:
        batch_latency: 143.918 us +/- 5.244 us [141.382 us, 275.612 us]
        batches_per_second: 6.95 K +/- 180.80 [3.63 K, 7.07 K]
      metrics:
        batches_per_second_max: 7073.025295109612
        batches_per_second_mean: 6954.686670174573
        batches_per_second_min: 3628.2906574394465
        batches_per_second_std: 180.80478492463052
        seconds_per_batch_max: 0.00027561187744140625
        seconds_per_batch_mean: 0.00014391827583312987
        seconds_per_batch_min: 0.00014138221740722656
        seconds_per_batch_std: 5.243849746257683e-06
    gpu_to_cpu:
      human_readable:
        batch_latency: 23.253 us +/- 0.536 us [22.411 us, 30.756 us]
        batches_per_second: 43.02 K +/- 876.04 [32.51 K, 44.62 K]
      metrics:
        batches_per_second_max: 44620.255319148935
        batches_per_second_mean: 43024.45864925897
        batches_per_second_min: 32513.98449612403
        batches_per_second_std: 876.0418827197086
        seconds_per_batch_max: 3.075599670410156e-05
        seconds_per_batch_mean: 2.3253440856933593e-05
        seconds_per_batch_min: 2.2411346435546875e-05
        seconds_per_batch_std: 5.360430188887194e-07
    on_device_inference:
      human_readable:
        batch_latency: -13761852.143 us +/- 36.816 ms [-14423007.965 us, -13679648.399
          us]
        batches_per_second: -0.07 +/- 0.00 [-0.07, -0.07]
      metrics:
        batches_per_second_max: -0.0693336648236335
        batches_per_second_mean: -0.0726651493073361
        batches_per_second_min: -0.07310129403964027
        batches_per_second_std: 0.00019128418762970957
        seconds_per_batch_max: -13.679648399353027
        seconds_per_batch_mean: -13.761852143287658
        seconds_per_batch_min: -14.42300796508789
        seconds_per_batch_std: 0.03681586061705024
    total:
      human_readable:
        batch_latency: 13.934 ms +/- 39.879 us [13.850 ms, 14.735 ms]
        batches_per_second: 71.76 +/- 0.20 [67.87, 72.20]
      metrics:
        batches_per_second_max: 72.20106038697239
        batches_per_second_mean: 71.76496045916291
        batches_per_second_min: 67.86789857769291
        batches_per_second_std: 0.20071758782373558
        seconds_per_batch_max: 0.014734506607055664
        seconds_per_batch_mean: 0.01393448829650879
        seconds_per_batch_min: 0.013850212097167969
        seconds_per_batch_std: 3.9878920692703026e-05


